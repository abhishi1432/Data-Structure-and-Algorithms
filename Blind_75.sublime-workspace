{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"re",
				"removeNthFromEnd"
			],
			[
				"for",
				"forCount"
			],
			[
				"head",
				"head_new"
			],
			[
				"l",
				"list2"
			],
			[
				"te",
				"temp1"
			],
			[
				"lst",
				"list1"
			],
			[
				"list",
				"list1"
			],
			[
				"lis",
				"list1"
			],
			[
				"reve",
				"reverseLinkedList_Iterative"
			],
			[
				"new",
				"new_head"
			],
			[
				"addn",
				"addNodeAtEnd"
			],
			[
				"longes",
				"longestCommonSubsequence_UsingRecursion"
			],
			[
				"INT",
				"INT_MIN"
			],
			[
				"IN",
				"INT_MIN"
			],
			[
				"call",
				"call_all_functions_here"
			],
			[
				"bina",
				"binarySearchh_lengthOfLIS_Helper"
			],
			[
				"mem",
				"memo"
			],
			[
				"su",
				"subAns"
			],
			[
				"toa",
				"total_ways_to_make_helper"
			],
			[
				"tot",
				"total_ways_to_make_helper"
			],
			[
				"min",
				"minimum_no_of_coins_to_make"
			],
			[
				"clim",
				"climbStairs_usingDP"
			],
			[
				"MA",
				"INT_MAX"
			],
			[
				"co",
				"coinChange2"
			],
			[
				"coinch",
				"coinChange"
			],
			[
				"minco",
				"mincoin"
			],
			[
				"coin",
				"coinChange"
			],
			[
				"ma",
				"maxSum"
			],
			[
				"ve",
				"vec"
			],
			[
				"bin",
				"bit_no"
			],
			[
				"max",
				"maxProd"
			],
			[
				"curr",
				"currMin"
			],
			[
				"cur",
				"currMin"
			],
			[
				"cum",
				"currMax"
			],
			[
				"Cou",
				"CountAndSay"
			],
			[
				"c",
				"CPP_template()"
			],
			[
				"tra",
				"trappingWater_method4"
			],
			[
				"mx_",
				"mx_left"
			],
			[
				"find",
				"find3numbers_usingSorting_and_TwoPointer"
			],
			[
				"second",
				"second_sell"
			],
			[
				"firs",
				"first_buy"
			],
			[
				"bes",
				"best_time_maxprofit3_method3"
			],
			[
				"tem",
				"temp2"
			],
			[
				"print",
				"print_vec"
			],
			[
				"n",
				"n_pos"
			],
			[
				"trac",
				"track1"
			],
			[
				"ad",
				"addEdge"
			],
			[
				"Arr",
				"ArrayChallenge"
			],
			[
				"prin",
				"printEdgeList"
			],
			[
				"get",
				"getWeight"
			],
			[
				"des",
				"destVertexID"
			],
			[
				"set",
				"setStateName"
			],
			[
				"pus",
				"push_back"
			],
			[
				"state_",
				"state_id"
			],
			[
				"dest",
				"destVertexID"
			],
			[
				"extra",
				"extractMax"
			],
			[
				"extract",
				"extractMax"
			],
			[
				"Max",
				"MaxHeap"
			],
			[
				"He",
				"MinHeapify"
			],
			[
				"Min",
				"MinHeapify"
			],
			[
				"pr",
				"printArray"
			],
			[
				"heap",
				"MinHeapify"
			],
			[
				"inser",
				"insertKey"
			],
			[
				"dele",
				"deleteNode"
			],
			[
				"qu",
				"Queries"
			],
			[
				"sele",
				"selectivity"
			],
			[
				"prit",
				"print_vec"
			],
			[
				"inse",
				"insertKey"
			],
			[
				"temp",
				"tempNode"
			],
			[
				"t",
				"tempNode"
			],
			[
				"queu",
				"queue"
			],
			[
				"ne",
				"next"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Blind 75/Linked_List/5.Remove_nth_from_end.cpp",
			"settings":
			{
				"buffer_size": 6737,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "C"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert_completion",
					{
						"completion": "/*\n\tA B H I S H E K    S I N G H\n*/\n\n#include<bits/stdc++.h>\nusing namespace std;\nusing namespace chrono;\n\n#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\n#define MOD 1000000007\n#define MOD1 998244353\n#define INF 1e18\n#define nline \"\\n\"\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\n#define ff first\n#define ss second\n#define PI 3.141592653589793238462\n#define set_bits __builtin_popcountll\n#define sz(x) ((int)(x).size())\n#define all(x) (x).begin(), (x).end()\n#define all_rev(x) (x).rbegin(), (x).rend()\n\n#ifndef ONLINE_JUDGE\n#define debug(x) cerr << #x <<\" \"; _print(x); cerr << endl;\n#else\n#define debug(x);\n#endif\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double lld;\n\n\n/*============================================================*/\n/*    debug() functions */\n\ntemplate <class T> void _print(T t) {cerr << t;}  \ntemplate <class T, class V> void _print(pair <T, V> p);\ntemplate <class T> void _print(vector <T> v);\ntemplate <class T> void _print(set <T> v);\ntemplate <class T, class V> void _print(map <T, V> v);\ntemplate <class T> void _print(multiset <T> v);\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\n\n/*==============================================================*/\n/*    Newly added templates */\n\ntemplate <class T> void print_vec(vector<T> v);  //printing any vector\ntemplate <class T> void print_set(set<T> s);  //printing set of any datatype\ntemplate <class T> void input_vec(vector<T> &v , int n);  //taking input of n elements of any data type into a vector\ntemplate <class T, class V, class X>V binarySearch(vector<T> a, V n, X item);  //binary search on vector\ntemplate <class T> void print_vec(vector<T> v){ for(T i:v){ cout<<i<<\" \";}cout<<nline;} \ntemplate <class T> void print_set(set<T> s){for(T i:s){cout<<i<<\" \";}cout<<nline;}  \ntemplate <class T> void input_vec(vector<T> &v , int n){for(int i=0;i<n;i++){int temp;cin>>temp;v.pb(temp);}}   \ntemplate <class T, class V, class X>V binarySearch(vector<T> a, V n, X item){  V low = 0; V high = n - 1; while(low<=high){{V mid = (low + high)/2; if (a[mid] == item) return mid; else if (a[mid] < item) low = mid + 1; else high = mid - 1;}} return -1;}\n\n/*===============================================================*/\n\n/*  Special puropose functions */\n\n// ll gcd(ll a, ll b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}\n// ll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}\n// void extendgcd(ll a, ll b, ll*v) {if (b == 0) {v[0] = 1; v[1] = 0; v[2] = a; return ;} extendgcd(b, a % b, v); ll x = v[1]; v[1] = v[0] - v[1] * (a / b); v[0] = x; return;} //pass an arry of size1 3\n// ll mminv(ll a, ll b) {ll arr[3]; extendgcd(a, b, arr); return arr[0];} //for non prime b\n// ll mminvprime(ll a, ll b) {return expo(a, b - 2, b);}\n// bool revsort(ll a, ll b) {return a > b;}\n// void swap(int &x, int &y) {int temp = x; x = y; y = temp;}\n// ll combination(ll n, ll r, ll m, ll *fact, ll *ifact) {ll val1 = fact[n]; ll val2 = ifact[n - r]; ll val3 = ifact[r]; return (((val1 * val2) % m) * val3) % m;}\n// void google(int t) {cout << \"Case #\" << t << \": \";}\n// vector<ll> sieve(int n) {int*arr = new int[n + 1](); vector<ll> vect; for (int i = 2; i <= n; i++)if (arr[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}\n// ll mod_add(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}\n// ll mod_mul(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}\n// ll mod_sub(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}\n// ll mod_div(ll a, ll b, ll m) {a = a % m; b = b % m; return (mod_mul(a, mminvprime(b, m), m) + m) % m;}  //only for prime m\n// ll phin(ll n) {ll number = n; if (n % 2 == 0) {number /= 2; while (n % 2 == 0) n /= 2;} for (ll i = 3; i <= sqrt(n); i += 2) {if (n % i == 0) {while (n % i == 0)n /= i; number = (number / i * (i - 1));}} if (n > 1)number = (number / n * (n - 1)) ; return number;} //O(sqrt(N))\n// ll lcm(int a, int b){return (a / gcd(a, b)) * b;}\n\n/*=================================================================*/\n\n\nvoid solve() {\n\t\n\n}\n\n\nint main() {\n\tfastio();\n#ifndef ONLINE_JUDGE\n\tfreopen(\"error.txt\", \"w\", stderr);\n#endif\n\tauto start1 = high_resolution_clock::now();\n\tsolve();\n\tauto stop1 = high_resolution_clock::now();\n\tauto duration = duration_cast<microseconds>(stop1 - start1);\n#ifndef ONLINE_JUDGE\n\tcerr << \"Time: \" << duration . count() / 1000 << endl;\n#endif\n\treturn 0;\n}",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "CPP_template()"
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAABAAAAQwAAAAAAAAAABBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"paste",
					null,
					"AgAAAAAAAAAAAAAAXRwAAAAAAAAAAAAAXRwAAAAAAABdHAAAAAAAAAQUAAAvKgoJQSBCIEggSSBTIEggRSBLICAgIFMgSSBOIEcgSAoqLwoKI2luY2x1ZGU8Yml0cy9zdGRjKysuaD4KdXNpbmcgbmFtZXNwYWNlIHN0ZDsKdXNpbmcgbmFtZXNwYWNlIGNocm9ubzsKCiNkZWZpbmUgZmFzdGlvKCkgaW9zX2Jhc2U6OnN5bmNfd2l0aF9zdGRpbyhmYWxzZSk7Y2luLnRpZShOVUxMKTtjb3V0LnRpZShOVUxMKQojZGVmaW5lIE1PRCAxMDAwMDAwMDA3CiNkZWZpbmUgTU9EMSA5OTgyNDQzNTMKI2RlZmluZSBJTkYgMWUxOAojZGVmaW5lIG5saW5lICJcbiIKI2RlZmluZSBwYiBwdXNoX2JhY2sKI2RlZmluZSBwcGIgcG9wX2JhY2sKI2RlZmluZSBtcCBtYWtlX3BhaXIKI2RlZmluZSBmZiBmaXJzdAojZGVmaW5lIHNzIHNlY29uZAojZGVmaW5lIFBJIDMuMTQxNTkyNjUzNTg5NzkzMjM4NDYyCiNkZWZpbmUgc2V0X2JpdHMgX19idWlsdGluX3BvcGNvdW50bGwKI2RlZmluZSBzeih4KSAoKGludCkoeCkuc2l6ZSgpKQojZGVmaW5lIGFsbCh4KSAoeCkuYmVnaW4oKSwgKHgpLmVuZCgpCiNkZWZpbmUgYWxsX3Jldih4KSAoeCkucmJlZ2luKCksICh4KS5yZW5kKCkKCiNpZm5kZWYgT05MSU5FX0pVREdFCiNkZWZpbmUgZGVidWcoeCkgY2VyciA8PCAjeCA8PCIgIjsgX3ByaW50KHgpOyBjZXJyIDw8IGVuZGw7CiNlbHNlCiNkZWZpbmUgZGVidWcoeCk7CiNlbmRpZgoKdHlwZWRlZiBsb25nIGxvbmcgbGw7CnR5cGVkZWYgdW5zaWduZWQgbG9uZyBsb25nIHVsbDsKdHlwZWRlZiBsb25nIGRvdWJsZSBsbGQ7CgoKLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qLwovKiAgICBkZWJ1ZygpIGZ1bmN0aW9ucyAqLwoKdGVtcGxhdGUgPGNsYXNzIFQ+IHZvaWQgX3ByaW50KFQgdCkge2NlcnIgPDwgdDt9ICAKdGVtcGxhdGUgPGNsYXNzIFQsIGNsYXNzIFY+IHZvaWQgX3ByaW50KHBhaXIgPFQsIFY+IHApOwp0ZW1wbGF0ZSA8Y2xhc3MgVD4gdm9pZCBfcHJpbnQodmVjdG9yIDxUPiB2KTsKdGVtcGxhdGUgPGNsYXNzIFQ+IHZvaWQgX3ByaW50KHNldCA8VD4gdik7CnRlbXBsYXRlIDxjbGFzcyBULCBjbGFzcyBWPiB2b2lkIF9wcmludChtYXAgPFQsIFY+IHYpOwp0ZW1wbGF0ZSA8Y2xhc3MgVD4gdm9pZCBfcHJpbnQobXVsdGlzZXQgPFQ+IHYpOwp0ZW1wbGF0ZSA8Y2xhc3MgVCwgY2xhc3MgVj4gdm9pZCBfcHJpbnQocGFpciA8VCwgVj4gcCkge2NlcnIgPDwgInsiOyBfcHJpbnQocC5mZik7IGNlcnIgPDwgIiwiOyBfcHJpbnQocC5zcyk7IGNlcnIgPDwgIn0iO30KdGVtcGxhdGUgPGNsYXNzIFQ+IHZvaWQgX3ByaW50KHZlY3RvciA8VD4gdikge2NlcnIgPDwgIlsgIjsgZm9yIChUIGkgOiB2KSB7X3ByaW50KGkpOyBjZXJyIDw8ICIgIjt9IGNlcnIgPDwgIl0iO30KdGVtcGxhdGUgPGNsYXNzIFQ+IHZvaWQgX3ByaW50KHNldCA8VD4gdikge2NlcnIgPDwgIlsgIjsgZm9yIChUIGkgOiB2KSB7X3ByaW50KGkpOyBjZXJyIDw8ICIgIjt9IGNlcnIgPDwgIl0iO30KdGVtcGxhdGUgPGNsYXNzIFQ+IHZvaWQgX3ByaW50KG11bHRpc2V0IDxUPiB2KSB7Y2VyciA8PCAiWyAiOyBmb3IgKFQgaSA6IHYpIHtfcHJpbnQoaSk7IGNlcnIgPDwgIiAiO30gY2VyciA8PCAiXSI7fQp0ZW1wbGF0ZSA8Y2xhc3MgVCwgY2xhc3MgVj4gdm9pZCBfcHJpbnQobWFwIDxULCBWPiB2KSB7Y2VyciA8PCAiWyAiOyBmb3IgKGF1dG8gaSA6IHYpIHtfcHJpbnQoaSk7IGNlcnIgPDwgIiAiO30gY2VyciA8PCAiXSI7fQoKLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSovCi8qICAgIE5ld2x5IGFkZGVkIHRlbXBsYXRlcyAqLwoKdGVtcGxhdGUgPGNsYXNzIFQ+IHZvaWQgcHJpbnRfdmVjKHZlY3RvcjxUPiB2KTsgIC8vcHJpbnRpbmcgYW55IHZlY3Rvcgp0ZW1wbGF0ZSA8Y2xhc3MgVD4gdm9pZCBwcmludF9zZXQoc2V0PFQ+IHMpOyAgLy9wcmludGluZyBzZXQgb2YgYW55IGRhdGF0eXBlCnRlbXBsYXRlIDxjbGFzcyBUPiB2b2lkIGlucHV0X3ZlYyh2ZWN0b3I8VD4gJnYgLCBpbnQgbik7ICAvL3Rha2luZyBpbnB1dCBvZiBuIGVsZW1lbnRzIG9mIGFueSBkYXRhIHR5cGUgaW50byBhIHZlY3Rvcgp0ZW1wbGF0ZSA8Y2xhc3MgVCwgY2xhc3MgViwgY2xhc3MgWD5WIGJpbmFyeVNlYXJjaCh2ZWN0b3I8VD4gYSwgViBuLCBYIGl0ZW0pOyAgLy9iaW5hcnkgc2VhcmNoIG9uIHZlY3Rvcgp0ZW1wbGF0ZSA8Y2xhc3MgVD4gdm9pZCBwcmludF92ZWModmVjdG9yPFQ+IHYpeyBmb3IoVCBpOnYpeyBjb3V0PDxpPDwiICI7fWNvdXQ8PG5saW5lO30gCnRlbXBsYXRlIDxjbGFzcyBUPiB2b2lkIHByaW50X3NldChzZXQ8VD4gcyl7Zm9yKFQgaTpzKXtjb3V0PDxpPDwiICI7fWNvdXQ8PG5saW5lO30gIAp0ZW1wbGF0ZSA8Y2xhc3MgVD4gdm9pZCBpbnB1dF92ZWModmVjdG9yPFQ+ICZ2ICwgaW50IG4pe2ZvcihpbnQgaT0wO2k8bjtpKyspe2ludCB0ZW1wO2Npbj4+dGVtcDt2LnBiKHRlbXApO319ICAgCnRlbXBsYXRlIDxjbGFzcyBULCBjbGFzcyBWLCBjbGFzcyBYPlYgYmluYXJ5U2VhcmNoKHZlY3RvcjxUPiBhLCBWIG4sIFggaXRlbSl7ICBWIGxvdyA9IDA7IFYgaGlnaCA9IG4gLSAxOyB3aGlsZShsb3c8PWhpZ2gpe3tWIG1pZCA9IChsb3cgKyBoaWdoKS8yOyBpZiAoYVttaWRdID09IGl0ZW0pIHJldHVybiBtaWQ7IGVsc2UgaWYgKGFbbWlkXSA8IGl0ZW0pIGxvdyA9IG1pZCArIDE7IGVsc2UgaGlnaCA9IG1pZCAtIDE7fX0gcmV0dXJuIC0xO30KCi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki8KCi8qICBTcGVjaWFsIHB1cm9wb3NlIGZ1bmN0aW9ucyAqLwoKLy8gbGwgZ2NkKGxsIGEsIGxsIGIpIHtpZiAoYiA+IGEpIHtyZXR1cm4gZ2NkKGIsIGEpO30gaWYgKGIgPT0gMCkge3JldHVybiBhO30gcmV0dXJuIGdjZChiLCBhICUgYik7fQovLyBsbCBleHBvKGxsIGEsIGxsIGIsIGxsIG1vZCkge2xsIHJlcyA9IDE7IHdoaWxlIChiID4gMCkge2lmIChiICYgMSlyZXMgPSAocmVzICogYSkgJSBtb2Q7IGEgPSAoYSAqIGEpICUgbW9kOyBiID0gYiA+PiAxO30gcmV0dXJuIHJlczt9Ci8vIHZvaWQgZXh0ZW5kZ2NkKGxsIGEsIGxsIGIsIGxsKnYpIHtpZiAoYiA9PSAwKSB7dlswXSA9IDE7IHZbMV0gPSAwOyB2WzJdID0gYTsgcmV0dXJuIDt9IGV4dGVuZGdjZChiLCBhICUgYiwgdik7IGxsIHggPSB2WzFdOyB2WzFdID0gdlswXSAtIHZbMV0gKiAoYSAvIGIpOyB2WzBdID0geDsgcmV0dXJuO30gLy9wYXNzIGFuIGFycnkgb2Ygc2l6ZTEgMwovLyBsbCBtbWludihsbCBhLCBsbCBiKSB7bGwgYXJyWzNdOyBleHRlbmRnY2QoYSwgYiwgYXJyKTsgcmV0dXJuIGFyclswXTt9IC8vZm9yIG5vbiBwcmltZSBiCi8vIGxsIG1taW52cHJpbWUobGwgYSwgbGwgYikge3JldHVybiBleHBvKGEsIGIgLSAyLCBiKTt9Ci8vIGJvb2wgcmV2c29ydChsbCBhLCBsbCBiKSB7cmV0dXJuIGEgPiBiO30KLy8gdm9pZCBzd2FwKGludCAmeCwgaW50ICZ5KSB7aW50IHRlbXAgPSB4OyB4ID0geTsgeSA9IHRlbXA7fQovLyBsbCBjb21iaW5hdGlvbihsbCBuLCBsbCByLCBsbCBtLCBsbCAqZmFjdCwgbGwgKmlmYWN0KSB7bGwgdmFsMSA9IGZhY3Rbbl07IGxsIHZhbDIgPSBpZmFjdFtuIC0gcl07IGxsIHZhbDMgPSBpZmFjdFtyXTsgcmV0dXJuICgoKHZhbDEgKiB2YWwyKSAlIG0pICogdmFsMykgJSBtO30KLy8gdm9pZCBnb29nbGUoaW50IHQpIHtjb3V0IDw8ICJDYXNlICMiIDw8IHQgPDwgIjogIjt9Ci8vIHZlY3RvcjxsbD4gc2lldmUoaW50IG4pIHtpbnQqYXJyID0gbmV3IGludFtuICsgMV0oKTsgdmVjdG9yPGxsPiB2ZWN0OyBmb3IgKGludCBpID0gMjsgaSA8PSBuOyBpKyspaWYgKGFycltpXSA9PSAwKSB7dmVjdC5wdXNoX2JhY2soaSk7IGZvciAoaW50IGogPSAyICogaTsgaiA8PSBuOyBqICs9IGkpYXJyW2pdID0gMTt9IHJldHVybiB2ZWN0O30KLy8gbGwgbW9kX2FkZChsbCBhLCBsbCBiLCBsbCBtKSB7YSA9IGEgJSBtOyBiID0gYiAlIG07IHJldHVybiAoKChhICsgYikgJSBtKSArIG0pICUgbTt9Ci8vIGxsIG1vZF9tdWwobGwgYSwgbGwgYiwgbGwgbSkge2EgPSBhICUgbTsgYiA9IGIgJSBtOyByZXR1cm4gKCgoYSAqIGIpICUgbSkgKyBtKSAlIG07fQovLyBsbCBtb2Rfc3ViKGxsIGEsIGxsIGIsIGxsIG0pIHthID0gYSAlIG07IGIgPSBiICUgbTsgcmV0dXJuICgoKGEgLSBiKSAlIG0pICsgbSkgJSBtO30KLy8gbGwgbW9kX2RpdihsbCBhLCBsbCBiLCBsbCBtKSB7YSA9IGEgJSBtOyBiID0gYiAlIG07IHJldHVybiAobW9kX211bChhLCBtbWludnByaW1lKGIsIG0pLCBtKSArIG0pICUgbTt9ICAvL29ubHkgZm9yIHByaW1lIG0KLy8gbGwgcGhpbihsbCBuKSB7bGwgbnVtYmVyID0gbjsgaWYgKG4gJSAyID09IDApIHtudW1iZXIgLz0gMjsgd2hpbGUgKG4gJSAyID09IDApIG4gLz0gMjt9IGZvciAobGwgaSA9IDM7IGkgPD0gc3FydChuKTsgaSArPSAyKSB7aWYgKG4gJSBpID09IDApIHt3aGlsZSAobiAlIGkgPT0gMCluIC89IGk7IG51bWJlciA9IChudW1iZXIgLyBpICogKGkgLSAxKSk7fX0gaWYgKG4gPiAxKW51bWJlciA9IChudW1iZXIgLyBuICogKG4gLSAxKSkgOyByZXR1cm4gbnVtYmVyO30gLy9PKHNxcnQoTikpCi8vIGxsIGxjbShpbnQgYSwgaW50IGIpe3JldHVybiAoYSAvIGdjZChhLCBiKSkgKiBiO30KCi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qLwoKCnZvaWQgc29sdmUoKSB7CgkKCn0KCgppbnQgbWFpbigpIHsKCWZhc3RpbygpOwojaWZuZGVmIE9OTElORV9KVURHRQoJZnJlb3BlbigiZXJyb3IudHh0IiwgInciLCBzdGRlcnIpOwojZW5kaWYKCWF1dG8gc3RhcnQxID0gaGlnaF9yZXNvbHV0aW9uX2Nsb2NrOjpub3coKTsKCXNvbHZlKCk7CglhdXRvIHN0b3AxID0gaGlnaF9yZXNvbHV0aW9uX2Nsb2NrOjpub3coKTsKCWF1dG8gZHVyYXRpb24gPSBkdXJhdGlvbl9jYXN0PG1pY3Jvc2Vjb25kcz4oc3RvcDEgLSBzdGFydDEpOwojaWZuZGVmIE9OTElORV9KVURHRQoJY2VyciA8PCAiVGltZTogIiA8PCBkdXJhdGlvbiAuIGNvdW50KCkgLyAxMDAwIDw8IGVuZGw7CiNlbmRpZgoJcmV0dXJuIDA7Cn0",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAEFAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"left_delete",
					null,
					"AQAAABoUAAAAAAAAGhQAAAAAAAAOBAAACk5vZGUqIG1lcmdlS0xpc3RzKHZlY3RvcjxOb2RlKj4mIGxpc3RzKSB7CiAgICBOb2RlKiBoZWFkX25ld3c9TlVMTDsKICAgIGZvcihpbnQgaT0wO2k8bGlzdHMuc2l6ZSgpO2krKyl7CiAgICAJTm9kZSogdGFpbD1OVUxMOwogICAgCU5vZGUqIGhlYWRfbmV3ID0gTlVMTDsKICAgIAlOb2RlKiBsaXN0MSA9IGxpc3RzW2ldOwogICAgCU5vZGUqIGxpc3QyID0gaGVhZF9uZXd3OwoKICAgIAlpZihsaXN0MT09TlVMTCl7CiAgICAJCWhlYWRfbmV3ID0gbGlzdDI7CiAgICAJCWhlYWRfbmV3dyA9IGhlYWRfbmV3OwogICAgCQljb250aW51ZTsKICAgIAl9CiAgICAJaWYobGlzdDIgPT0gTlVMTCl7CiAgICAJCWhlYWRfbmV3ID0gbGlzdDE7CiAgICAJCWhlYWRfbmV3dyA9IGhlYWRfbmV3OwogICAgCQljb250aW51ZTsKICAgIAl9CgoJICAgIHdoaWxlKGxpc3QxIT1OVUxMICYmIGxpc3QyIT1OVUxMKXsKCSAgICAgICAgaWYobGlzdDEtPmRhdGEgPCBsaXN0Mi0+ZGF0YSl7CgkgICAgICAgICAgICBpZihoZWFkX25ldyA9PU5VTEwpCgkgICAgICAgICAgICAgICAgaGVhZF9uZXc9bGlzdDE7CgkgICAgICAgICAgICBlbHNlCgkgICAgICAgICAgICAgICAgdGFpbC0+bmV4dD1saXN0MTsKCSAgICAgICAgICAgIHRhaWw9bGlzdDE7CgkgICAgICAgICAgICBsaXN0MT1saXN0MS0+bmV4dDsKCSAgICAgICAgfQoJICAgICAgICBlbHNlewoJICAgICAgICAgICAgaWYoaGVhZF9uZXcgPT1OVUxMKQoJICAgICAgICAgICAgICAgIGhlYWRfbmV3PWxpc3QyOwoJICAgICAgICAgICAgZWxzZQoJICAgICAgICAgICAgICAgIHRhaWwtPm5leHQ9bGlzdDI7CgkgICAgICAgICAgICB0YWlsPWxpc3QyOwoJICAgICAgICAgICAgbGlzdDI9bGlzdDItPm5leHQ7CgkgICAgICAgIH0KCSAgICB9CgkgICAgaWYobGlzdDEhPU5VTEwpCgkgICAgICAgIHRhaWwtPm5leHQ9bGlzdDE7CgkgICAgaWYobGlzdDIhPU5VTEwpCgkgICAgICAgIHRhaWwtPm5leHQ9bGlzdDI7CgkgICAgaGVhZF9uZXd3ID0gaGVhZF9uZXc7Cgl9CiAgICByZXR1cm4gaGVhZF9uZXd3Owp9",
					"AQAAAAAAAAABAAAAKBgAAAAAAAAaFAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"paste",
					null,
					"AQAAABoUAAAAAAAAXhUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGhQAAAAAAAAaFAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"paste",
					null,
					"AgAAABoUAAAAAAAAXRQAAAAAAAAAAAAAXRQAAAAAAABdFAAAAAAAACQAAAB2b2lkIERlbGV0ZU5vZGUoTm9kZSoqIGhlYWQsaW50IHBvcyk",
					"AQAAAAAAAAABAAAAGhQAAAAAAAA+FAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					6,
					"left_delete",
					null,
					"BgAAAFwUAAAAAAAAXBQAAAAAAAABAAAAfVsUAAAAAAAAWxQAAAAAAAABAAAAIFoUAAAAAAAAWhQAAAAAAAABAAAAIFkUAAAAAAAAWRQAAAAAAAABAAAAIFgUAAAAAAAAWBQAAAAAAAABAAAAIFcUAAAAAAAAVxQAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAXRQAAAAAAABdFAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					10,
					"left_delete",
					null,
					"CgAAAFcUAAAAAAAAVxQAAAAAAAABAAAAe1YUAAAAAAAAVhQAAAAAAAABAAAAIFUUAAAAAAAAVRQAAAAAAAABAAAAIFQUAAAAAAAAVBQAAAAAAAABAAAAIFMUAAAAAAAAUxQAAAAAAAABAAAAIFIUAAAAAAAAUhQAAAAAAAABAAAAIFEUAAAAAAAAURQAAAAAAAABAAAAIFAUAAAAAAAAUBQAAAAAAAABAAAAIE8UAAAAAAAATxQAAAAAAAABAAAAIE4UAAAAAAAAThQAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAWBQAAAAAAABYFAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"left_delete",
					null,
					"AQAAABsUAAAAAAAAGxQAAAAAAAAEAAAATGlzdA",
					"AQAAAAAAAAABAAAAHxQAAAAAAAAbFAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"left_delete",
					null,
					"AQAAADIUAAAAAAAAMhQAAAAAAAAEAAAATGlzdA",
					"AQAAAAAAAAABAAAANhQAAAAAAAAyFAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"left_delete",
					null,
					"AQAAAEsUAAAAAAAASxQAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAATBQAAAAAAABMFAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"left_delete",
					null,
					"AQAAAFIUAAAAAAAAUhQAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAAUxQAAAAAAABTFAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"left_delete",
					null,
					"AQAAAHAUAAAAAAAAcBQAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAcRQAAAAAAABxFAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"left_delete",
					null,
					"AQAAAIUUAAAAAAAAhRQAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAhhQAAAAAAACGFAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK4UAAAAAAAArxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArhQAAAAAAACuFAAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": " head"
					},
					"BQAAAGAUAAAAAAAAYRQAAAAAAAAAAAAAYRQAAAAAAABiFAAAAAAAAAAAAABiFAAAAAAAAGMUAAAAAAAAAAAAAGMUAAAAAAAAZBQAAAAAAAAAAAAAZBQAAAAAAABlFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYBQAAAAAAABgFAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "\nint"
					},
					"BQAAAHoUAAAAAAAAexQAAAAAAAAAAAAAexQAAAAAAAB8FAAAAAAAAAAAAAB8FAAAAAAAAH0UAAAAAAAAAAAAAH0UAAAAAAAAfhQAAAAAAAAAAAAAfhQAAAAAAAB/FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAehQAAAAAAAB6FAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " pos"
					},
					"BAAAAH8UAAAAAAAAgBQAAAAAAAAAAAAAgBQAAAAAAACBFAAAAAAAAAAAAACBFAAAAAAAAIIUAAAAAAAAAAAAAIIUAAAAAAAAgxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfxQAAAAAAAB/FAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIMUAAAAAAAAhBQAAAAAAAAAAAAAhBQAAAAAAACFFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgxQAAAAAAACDFAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": " n-"
					},
					"AwAAAIUUAAAAAAAAhhQAAAAAAAAAAAAAhhQAAAAAAACHFAAAAAAAAAAAAACHFAAAAAAAAIgUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhRQAAAAAAACFFAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "\nwhile"
					},
					"BwAAAHoUAAAAAAAAexQAAAAAAAAAAAAAexQAAAAAAAB8FAAAAAAAAAAAAAB8FAAAAAAAAH0UAAAAAAAAAAAAAH0UAAAAAAAAfhQAAAAAAAAAAAAAfhQAAAAAAAB/FAAAAAAAAAAAAAB/FAAAAAAAAIAUAAAAAAAAAAAAAIAUAAAAAAAAgRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAehQAAAAAAAB6FAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIEUAAAAAAAAgxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgRQAAAAAAACBFAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "head!=nU"
					},
					"CAAAAIIUAAAAAAAAgxQAAAAAAAAAAAAAgxQAAAAAAACEFAAAAAAAAAAAAACEFAAAAAAAAIUUAAAAAAAAAAAAAIUUAAAAAAAAhhQAAAAAAAAAAAAAhhQAAAAAAACHFAAAAAAAAAAAAACHFAAAAAAAAIgUAAAAAAAAAAAAAIgUAAAAAAAAiRQAAAAAAAAAAAAAiRQAAAAAAACKFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAghQAAAAAAACCFAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "LL"
					},
					"AgAAAIoUAAAAAAAAixQAAAAAAAAAAAAAixQAAAAAAACMFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAihQAAAAAAACKFAAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					4,
					"left_delete",
					null,
					"BAAAAIsUAAAAAAAAixQAAAAAAAABAAAATIoUAAAAAAAAihQAAAAAAAABAAAATIkUAAAAAAAAiRQAAAAAAAABAAAAVYgUAAAAAAAAiBQAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAjBQAAAAAAACMFAAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "NULL"
					},
					"BAAAAIgUAAAAAAAAiRQAAAAAAAAAAAAAiRQAAAAAAACKFAAAAAAAAAAAAACKFAAAAAAAAIsUAAAAAAAAAAAAAIsUAAAAAAAAjBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiBQAAAAAAACIFAAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAI0UAAAAAAAAjxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjRQAAAAAAACNFAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAI4UAAAAAAAAjxQAAAAAAAAAAAAAjxQAAAAAAACQFAAAAAAAAAAAAACQFAAAAAAAAJEUAAAAAAAAAAAAAJEUAAAAAAAAkhQAAAAAAAAAAAAAjxQAAAAAAACPFAAAAAAAAAEAAAAJjxQAAAAAAACRFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjhQAAAAAAACOFAAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "\nint"
					},
					"BgAAAHoUAAAAAAAAexQAAAAAAAAAAAAAexQAAAAAAAB8FAAAAAAAAAAAAACRFAAAAAAAAJEUAAAAAAAAAgAAAAkJfBQAAAAAAAB9FAAAAAAAAAAAAAB9FAAAAAAAAH4UAAAAAAAAAAAAAH4UAAAAAAAAfxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAehQAAAAAAAB6FAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": " count"
					},
					"BgAAAH8UAAAAAAAAgBQAAAAAAAAAAAAAgBQAAAAAAACBFAAAAAAAAAAAAACBFAAAAAAAAIIUAAAAAAAAAAAAAIIUAAAAAAAAgxQAAAAAAAAAAAAAgxQAAAAAAACEFAAAAAAAAAAAAACEFAAAAAAAAIUUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfxQAAAAAAAB/FAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIUUAAAAAAAAhhQAAAAAAAAAAAAAhhQAAAAAAACHFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhRQAAAAAAACFFAAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " 0;"
					},
					"AwAAAIcUAAAAAAAAiBQAAAAAAAAAAAAAiBQAAAAAAACJFAAAAAAAAAAAAACJFAAAAAAAAIoUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhxQAAAAAAACHFAAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"reindent",
					null,
					"AQAAAJ8UAAAAAAAAoRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnxQAAAAAAACfFAAAAAAAAAAAAAAAgGJA"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "count"
					},
					"BQAAAKEUAAAAAAAAohQAAAAAAAAAAAAAohQAAAAAAACjFAAAAAAAAAAAAACjFAAAAAAAAKQUAAAAAAAAAAAAAKQUAAAAAAAApRQAAAAAAAAAAAAApRQAAAAAAACmFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoRQAAAAAAAChFAAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "++;"
					},
					"AwAAAKYUAAAAAAAApxQAAAAAAAAAAAAApxQAAAAAAACoFAAAAAAAAAAAAACoFAAAAAAAAKkUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAphQAAAAAAACmFAAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "\nhead="
					},
					"BwAAAKkUAAAAAAAAqhQAAAAAAAAAAAAAqhQAAAAAAACsFAAAAAAAAAAAAACsFAAAAAAAAK0UAAAAAAAAAAAAAK0UAAAAAAAArhQAAAAAAAAAAAAArhQAAAAAAACvFAAAAAAAAAAAAACvFAAAAAAAALAUAAAAAAAAAAAAALAUAAAAAAAAsRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqRQAAAAAAACpFAAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "head->ne"
					},
					"CAAAALEUAAAAAAAAshQAAAAAAAAAAAAAshQAAAAAAACzFAAAAAAAAAAAAACzFAAAAAAAALQUAAAAAAAAAAAAALQUAAAAAAAAtRQAAAAAAAAAAAAAtRQAAAAAAAC2FAAAAAAAAAAAAAC2FAAAAAAAALcUAAAAAAAAAAAAALcUAAAAAAAAuBQAAAAAAAAAAAAAuBQAAAAAAAC5FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsRQAAAAAAACxFAAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert_completion",
					{
						"completion": "next",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "next"
					},
					"AgAAALcUAAAAAAAAtxQAAAAAAAACAAAAbmW3FAAAAAAAALsUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuRQAAAAAAAC5FAAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALsUAAAAAAAAvBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuxQAAAAAAAC7FAAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					4,
					"left_delete",
					null,
					"BAAAAJUUAAAAAAAAlRQAAAAAAAABAAAAZJQUAAAAAAAAlBQAAAAAAAABAAAAYZMUAAAAAAAAkxQAAAAAAAABAAAAZZIUAAAAAAAAkhQAAAAAAAABAAAAaA",
					"AQAAAAAAAAABAAAAlhQAAAAAAACWFAAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "foro"
					},
					"BAAAAJIUAAAAAAAAkxQAAAAAAAAAAAAAkxQAAAAAAACUFAAAAAAAAAAAAACUFAAAAAAAAJUUAAAAAAAAAAAAAJUUAAAAAAAAlhQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkhQAAAAAAACSFAAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"left_delete",
					null,
					"AQAAAJUUAAAAAAAAlRQAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAlhQAAAAAAACWFAAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": "Count"
					},
					"BQAAAJUUAAAAAAAAlhQAAAAAAAAAAAAAlhQAAAAAAACXFAAAAAAAAAAAAACXFAAAAAAAAJgUAAAAAAAAAAAAAJgUAAAAAAAAmRQAAAAAAAAAAAAAmRQAAAAAAACaFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlRQAAAAAAACVFAAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					4,
					"left_delete",
					null,
					"BAAAALMUAAAAAAAAsxQAAAAAAAABAAAAZLIUAAAAAAAAshQAAAAAAAABAAAAYbEUAAAAAAAAsRQAAAAAAAABAAAAZbAUAAAAAAAAsBQAAAAAAAABAAAAaA",
					"AQAAAAAAAAABAAAAtBQAAAAAAAC0FAAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "for"
					},
					"AwAAALAUAAAAAAAAsRQAAAAAAAAAAAAAsRQAAAAAAACyFAAAAAAAAAAAAACyFAAAAAAAALMUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsBQAAAAAAACwFAAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert_completion",
					{
						"completion": "forCount",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "forCount"
					},
					"AgAAALAUAAAAAAAAsBQAAAAAAAADAAAAZm9ysBQAAAAAAAC4FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsxQAAAAAAACzFAAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					4,
					"left_delete",
					null,
					"BAAAALwUAAAAAAAAvBQAAAAAAAABAAAAZLsUAAAAAAAAuxQAAAAAAAABAAAAYboUAAAAAAAAuhQAAAAAAAABAAAAZbkUAAAAAAAAuRQAAAAAAAABAAAAaA",
					"AQAAAAAAAAABAAAAvRQAAAAAAAC9FAAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAALkUAAAAAAAAuhQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuRQAAAAAAAC5FAAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert_completion",
					{
						"completion": "forCount",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "forCount"
					},
					"AgAAALkUAAAAAAAAuRQAAAAAAAABAAAAZrkUAAAAAAAAwRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuhQAAAAAAAC6FAAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": ",*"
					},
					"AgAAAHkUAAAAAAAAehQAAAAAAAAAAAAAehQAAAAAAAB7FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeRQAAAAAAAB5FAAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "for"
					},
					"AwAAAHsUAAAAAAAAfBQAAAAAAAAAAAAAfBQAAAAAAAB9FAAAAAAAAAAAAAB9FAAAAAAAAH4UAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAexQAAAAAAAB7FAAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert_completion",
					{
						"completion": "forCount",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "forCount"
					},
					"AgAAAHsUAAAAAAAAexQAAAAAAAADAAAAZm9yexQAAAAAAACDFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfhQAAAAAAAB+FAAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIMUAAAAAAAAhBQAAAAAAAAAAAAAhBQAAAAAAACFFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgxQAAAAAAACDFAAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": " head"
					},
					"BQAAAIUUAAAAAAAAhhQAAAAAAAAAAAAAhhQAAAAAAACHFAAAAAAAAAAAAACHFAAAAAAAAIgUAAAAAAAAAAAAAIgUAAAAAAAAiRQAAAAAAAAAAAAAiRQAAAAAAACKFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhRQAAAAAAACFFAAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"left_delete",
					null,
					"AQAAAOgUAAAAAAAA6BQAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAA6RQAAAAAAADpFAAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "for"
					},
					"AwAAAOgUAAAAAAAA6RQAAAAAAAAAAAAA6RQAAAAAAADqFAAAAAAAAAAAAADqFAAAAAAAAOsUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6BQAAAAAAADoFAAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					3,
					"left_delete",
					null,
					"AwAAAOoUAAAAAAAA6hQAAAAAAAABAAAAcukUAAAAAAAA6RQAAAAAAAABAAAAb+gUAAAAAAAA6BQAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAA6xQAAAAAAADrFAAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "coi"
					},
					"AwAAAOgUAAAAAAAA6RQAAAAAAAAAAAAA6RQAAAAAAADqFAAAAAAAAAAAAADqFAAAAAAAAOsUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6BQAAAAAAADoFAAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					3,
					"left_delete",
					null,
					"AwAAAOoUAAAAAAAA6hQAAAAAAAABAAAAaekUAAAAAAAA6RQAAAAAAAABAAAAb+gUAAAAAAAA6BQAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAA6xQAAAAAAADrFAAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "forC"
					},
					"BAAAAOgUAAAAAAAA6RQAAAAAAAAAAAAA6RQAAAAAAADqFAAAAAAAAAAAAADqFAAAAAAAAOsUAAAAAAAAAAAAAOsUAAAAAAAA7BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6BQAAAAAAADoFAAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert_completion",
					{
						"completion": "forCount",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "forCount"
					},
					"AgAAAOgUAAAAAAAA6BQAAAAAAAAEAAAAZm9yQ+gUAAAAAAAA8BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7BQAAAAAAADsFAAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPAUAAAAAAAA8RQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8BQAAAAAAADwFAAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": " n;"
					},
					"AwAAAPIUAAAAAAAA8xQAAAAAAAAAAAAA8xQAAAAAAAD0FAAAAAAAAAAAAAD0FAAAAAAAAPUUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8hQAAAAAAADyFAAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAPQUAAAAAAAA9RQAAAAAAAAAAAAA9RQAAAAAAAD2FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9BQAAAAAAAD0FAAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAAPYUAAAAAAAA9xQAAAAAAAAAAAAA9xQAAAAAAAD4FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9hQAAAAAAAD2FAAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJYVAAAAAAAAlxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlhUAAAAAAACWFQAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": "head"
					},
					"BAAAADMVAAAAAAAANBUAAAAAAAAAAAAANBUAAAAAAAA1FQAAAAAAAAAAAAA1FQAAAAAAADYVAAAAAAAAAAAAADYVAAAAAAAANxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMxUAAAAAAAAzFQAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "head"
					},
					"BAAAAJsVAAAAAAAAnBUAAAAAAAAAAAAAnBUAAAAAAACdFQAAAAAAAAAAAACdFQAAAAAAAJ4VAAAAAAAAAAAAAJ4VAAAAAAAAnxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmxUAAAAAAACbFQAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": "\nre"
					},
					"BAAAAO0VAAAAAAAA7hUAAAAAAAAAAAAA7hUAAAAAAADvFQAAAAAAAAAAAADvFQAAAAAAAPAVAAAAAAAAAAAAAPAVAAAAAAAA8RUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7RUAAAAAAADtFQAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert_completion",
					{
						"completion": "return",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "return"
					},
					"AgAAAO8VAAAAAAAA7xUAAAAAAAACAAAAcmXvFQAAAAAAAPUVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8RUAAAAAAADxFQAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": " headl"
					},
					"BgAAAPUVAAAAAAAA9hUAAAAAAAAAAAAA9hUAAAAAAAD3FQAAAAAAAAAAAAD3FQAAAAAAAPgVAAAAAAAAAAAAAPgVAAAAAAAA+RUAAAAAAAAAAAAA+RUAAAAAAAD6FQAAAAAAAAAAAAD6FQAAAAAAAPsVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9RUAAAAAAAD1FQAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"left_delete",
					null,
					"AQAAAPoVAAAAAAAA+hUAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAA+xUAAAAAAAD7FQAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPoVAAAAAAAA+xUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hUAAAAAAAD6FQAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					19,
					"left_delete",
					null,
					"EwAAALIYAAAAAAAAshgAAAAAAAABAAAAO7EYAAAAAAAAsRgAAAAAAAABAAAAKbAYAAAAAAAAsBgAAAAAAAABAAAAc68YAAAAAAAArxgAAAAAAAABAAAAdK4YAAAAAAAArhgAAAAAAAABAAAAc60YAAAAAAAArRgAAAAAAAABAAAAaawYAAAAAAAArBgAAAAAAAABAAAAbKsYAAAAAAAAqxgAAAAAAAABAAAAKKoYAAAAAAAAqhgAAAAAAAABAAAAc6kYAAAAAAAAqRgAAAAAAAABAAAAdKgYAAAAAAAAqBgAAAAAAAABAAAAc6cYAAAAAAAApxgAAAAAAAABAAAAaaYYAAAAAAAAphgAAAAAAAABAAAATKUYAAAAAAAApRgAAAAAAAABAAAAS6QYAAAAAAAApBgAAAAAAAABAAAAZaMYAAAAAAAAoxgAAAAAAAABAAAAZ6IYAAAAAAAAohgAAAAAAAABAAAAcqEYAAAAAAAAoRgAAAAAAAABAAAAZaAYAAAAAAAAoBgAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAsxgAAAAAAACzGAAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": "re"
					},
					"AgAAAKAYAAAAAAAAoRgAAAAAAAAAAAAAoRgAAAAAAACiGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoBgAAAAAAACgGAAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert_completion",
					{
						"completion": "removeNthFromEnd",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "removeNthFromEnd"
					},
					"AgAAAKAYAAAAAAAAoBgAAAAAAAACAAAAcmWgGAAAAAAAALAYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAohgAAAAAAACiGAAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALAYAAAAAAAAshgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsBgAAAAAAACwGAAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": "head2,"
					},
					"BgAAALEYAAAAAAAAshgAAAAAAAAAAAAAshgAAAAAAACzGAAAAAAAAAAAAACzGAAAAAAAALQYAAAAAAAAAAAAALQYAAAAAAAAtRgAAAAAAAAAAAAAtRgAAAAAAAC2GAAAAAAAAAAAAAC2GAAAAAAAALcYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsRgAAAAAAACxGAAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALcYAAAAAAAAuBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtxgAAAAAAAC3GAAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"left_delete",
					null,
					"AQAAALcYAAAAAAAAtxgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAuBgAAAAAAAC4GAAAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAALcYAAAAAAAAuBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtxgAAAAAAAC3GAAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALkYAAAAAAAAuhgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuRgAAAAAAAC5GAAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AgAAAOgUAAAAAAAA6RQAAAAAAAAAAAAA6RQAAAAAAADpFAAAAAAAAAQAAABmb3JD",
					"AQAAAAAAAAABAAAA7BQAAAAAAADoFAAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"left_delete",
					null,
					"AQAAALQYAAAAAAAAtBgAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAtRgAAAAAAAC1GAAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAALQYAAAAAAAAtRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtBgAAAAAAAC0GAAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"left_delete",
					null,
					"AQAAALQYAAAAAAAAtBgAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAtRgAAAAAAAC1GAAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAALQYAAAAAAAAtRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtBgAAAAAAAC0GAAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"left_delete",
					null,
					"AQAAALQYAAAAAAAAtBgAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAAtRgAAAAAAAC1GAAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAALQYAAAAAAAAtRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtBgAAAAAAAC0GAAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"left_delete",
					null,
					"AQAAALQYAAAAAAAAtBgAAAAAAAABAAAANA",
					"AQAAAAAAAAABAAAAtRgAAAAAAAC1GAAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAALQYAAAAAAAAtRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtBgAAAAAAAC0GAAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAAPYUAAAAAAAA9xQAAAAAAAAAAAAA9xQAAAAAAAD4FAAAAAAAAAAAAAD4FAAAAAAAAPkUAAAAAAAAAAAAAPkUAAAAAAAA+hQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9hQAAAAAAAD2FAAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPoUAAAAAAAA/BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hQAAAAAAAD6FAAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": "pis"
					},
					"AwAAAPsUAAAAAAAA/BQAAAAAAAAAAAAA/BQAAAAAAAD9FAAAAAAAAAAAAAD9FAAAAAAAAP4UAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+xQAAAAAAAD7FAAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					2,
					"left_delete",
					null,
					"AgAAAP0UAAAAAAAA/RQAAAAAAAABAAAAc/wUAAAAAAAA/BQAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAA/hQAAAAAAAD+FAAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": "os"
					},
					"AgAAAPwUAAAAAAAA/RQAAAAAAAAAAAAA/RQAAAAAAAD+FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/BQAAAAAAAD8FAAAAAAAAAAAAAAAAPC/"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": "<=0"
					},
					"AwAAAP4UAAAAAAAA/xQAAAAAAAAAAAAA/xQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAEVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/hQAAAAAAAD+FAAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": "\nre"
					},
					"BgAAAAIVAAAAAAAAAxUAAAAAAAAAAAAAAxUAAAAAAAAEFQAAAAAAAAAAAAADFQAAAAAAAAMVAAAAAAAAAQAAAAkDFQAAAAAAAAUVAAAAAAAAAAAAAAUVAAAAAAAABhUAAAAAAAAAAAAABhUAAAAAAAAHFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAhUAAAAAAAACFQAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"insert_completion",
					{
						"completion": "return",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "return"
					},
					"AgAAAAUVAAAAAAAABRUAAAAAAAACAAAAcmUFFQAAAAAAAAsVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABxUAAAAAAAAHFQAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": " head;"
					},
					"BgAAAAsVAAAAAAAADBUAAAAAAAAAAAAADBUAAAAAAAANFQAAAAAAAAAAAAANFQAAAAAAAA4VAAAAAAAAAAAAAA4VAAAAAAAADxUAAAAAAAAAAAAADxUAAAAAAAAQFQAAAAAAAAAAAAAQFQAAAAAAABEVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACxUAAAAAAAALFQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "Blind 75/Linked_List/Revise_Linked_List.cpp",
			"settings":
			{
				"buffer_size": 7556,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "Blind 75/Linked_List/input.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Blind 75/Linked_List/output.txt",
			"settings":
			{
				"buffer_size": 76,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQoAAAAAAAAAACYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQoAAAAAAAAAACYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQoAAAAAAAAAADoAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAA6AAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQpQcmludGluZy4uLgowCjEKMgozCgAAAAAAAAAAOgAAAAAAAAAAAAAAAAAAAAAAAAA6AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA6AAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQpQcmludGluZy4uLgowCjEKMgozCgAAAAAAAAAAOgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA6AAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQpQcmludGluZy4uLgowCjEKMgozCgAAAAAAAAAAQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAABAAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQpQcmludGluZy4uLgowCjEKMQoyCjIKMwo1CgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABAAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQpQcmludGluZy4uLgowCjEKMQoyCjIKMwo1CgAAAAAAAAAAQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABAAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQpQcmludGluZy4uLgowCjEKMQoyCjIKMwo1CgAAAAAAAAAAWgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABaAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQpQcmludGluZy4uLgowCjEKMQoyCjIKMwo1ClByaW50aW5nLi4uCjAKMQoxCjIKMgozCjUKAAAAAAAAAABYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABYAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQpQcmludGluZy4uLgowCjEKMQoyCjIKMwo1ClByaW50aW5nLi4uCjEKMQoyCjIKMwo1CgAAAAAAAAAAQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAABAAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQpQcmludGluZy4uLgowCjEKMQoyCjIKMwo1CgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAyAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQpQcmludGluZy4uLgoAAAAAAAAAAEQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABEAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQpQcmludGluZy4uLgoxCjIKNQpQcmludGluZy4uLgoAAAAAAAAAAEQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABEAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQpQcmludGluZy4uLgoxCjMKOQpQcmludGluZy4uLgoAAAAAAAAAAFgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABYAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQpQcmludGluZy4uLgoxCjMKOQpQcmludGluZy4uLgowCjEKMQoxCjIKMgozCjMKNQo5CgAAAAAAAAAAWAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABYAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQpQcmludGluZy4uLgoxCjMKOQpQcmludGluZy4uLgowCjEKMQoxCjIKMgozCjMKNQo5CgAAAAAAAAAASgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABKAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQpQcmludGluZy4uLgoxCjMKOQpQcmludGluZy4uLgowCjEKMgoAAAAAAAAAAEoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABKAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQpQcmludGluZy4uLgoxCjMKOQpQcmludGluZy4uLgowCjEKMwoAAAAAAAAAAEoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABKAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQpQcmludGluZy4uLgoxCjMKOQpQcmludGluZy4uLgowCjIKMwoAAAAAAAAAAEoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABKAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQpQcmludGluZy4uLgoxCjMKOQpQcmludGluZy4uLgoxCjIKMwoAAAAAAAAAAEoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABKAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQpQcmludGluZy4uLgoxCjMKOQpQcmludGluZy4uLgowCjIKMwoAAAAAAAAAAEwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "Blind 75/Linked_List/error.txt",
			"settings":
			{
				"buffer_size": 8,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"reinden",
				"Indentation: Reindent Lines"
			],
			[
				"red",
				"Indentation: Reindent Lines"
			],
			[
				"inde",
				"Indentation: Reindent Lines"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/F/Tech learn and project/coding/CPP practice/Blind 75",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Linked_List"
	],
	"file_history":
	[
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Linked_List/3.Merge_Two_sorted_LinkedLists.cpp",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Linked_List/4.Merge_K_Sorted_LinkedList.cpp",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Linked_List/2.Detect_Cycle_In_LinkedList.cpp",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Graph/Revise_Graph.cpp",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Graph/input.txt",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Graph/error.txt",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Graph/output.txt",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Linked_List/input.txt",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Linked_List/error.txt",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Linked_List/output.txt",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Linked_List/1.Reverse_a_Linked_list.cpp",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Linked_List/Revise_Linked_List.cpp",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/DP/error.txt",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/DP/output.txt",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/DP/input.txt",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/DP/4.Longest_Common_Subsequence.cpp",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/DP/3.Longest_Increasing_Subsequence.cpp",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/DP/2.Coin_Change.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/DP/error.txt",
		"/F/Tech learn and project/coding/CPP practice/leetcode/DP/2.Coin_Change.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/DP/input.txt",
		"/F/Tech learn and project/coding/CPP practice/leetcode/DP/output.txt",
		"/F/Tech learn and project/coding/CPP practice/leetcode/DP/1.Climbing_Stairs.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/output.txt",
		"/F/Tech learn and project/coding/CPP practice/leetcode/input.txt",
		"/F/Tech learn and project/coding/CPP practice/leetcode/error.txt",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Climbing_Stairs.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Contains_Duplicate.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Container_With_Most_Water.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Three_Sum.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/DailyChallange_CoinChange.cpp",
		"/E/json",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Missing_Number.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Counting_Bits.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Kira_amazon.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Reverse_Bits.cpp",
		"/C/Users/Abhishek Wisteli/Desktop/backupProcessingPipeline.js",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Number_Of_1_Bits.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Sum_Of_Two_Integers.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Search_In_Rotated_Sorted_Array.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Minimum_In_Rotated_Sorted_Array.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Product_Of_Array_Except_Self.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Maximum_Subarray.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Maximum_Product_Subarray.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Maximum_Product_Of_Three_Numbers.cpp",
		"/C/Users/Abhishek Wisteli/AppData/Roaming/Sublime Text/Packages/User/CPP_template.sublime-snippet",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Two_Sum.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Best_Time_To_Buy_And_Sell_Stock.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Two Sum.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/String_ques7.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/DP_Ques1.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques10.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques11.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/String_ques2.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/String_ques1.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/String_ques3.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/String_ques5.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques36.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_Ques35.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/error.txt",
		"/F/Tech learn and project/coding/CPP practice/love babbar/output.txt",
		"/F/Tech learn and project/coding/CPP practice/love babbar/input.txt",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques34.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques30.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques33.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques32.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques31.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques29.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques19.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques28.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques26.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques18.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques25.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/fileInput (1).txt.crdownload",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques9.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques24.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques23.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques22.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques21.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques20.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/LinkedList.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/friend_class.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/Codevita2022_ques1.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/Codevita2022_ques2.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/Codevita2022_ques4.py",
		"/F/Tech learn and project/coding/CPP practice/learn DS/graph_adjacencyList_cycleCheck_Directed.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/graph_adjacencyList_cycleCheck_Undirected.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/segmentTree_range_Query.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/deepti.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/shubham_chocolate.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/graph_adjacencyList_SimpleUsingArrayOfVector_gfg.cpp",
		"/C/Users/Abhishek Wisteli/Desktop/Screenshot 2022-02-04 100917.png",
		"/F/Tech learn and project/coding/CPP practice/learn DS/graph_adjacencyList_ComplexUsingYoutube.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/prakhar.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/output.txt",
		"/F/Tech learn and project/coding/CPP practice/learn DS/bianryheap.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/Stack.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/Queue.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/Binarytree.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/BinaryTreeViaArray.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/BinarySearchTree.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/temp.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/anupamq2.cpp",
		"/G/Desktop Folders/Tech learn and project/coding/CPP practice/output.txt",
		"/G/Desktop Folders/Tech learn and project/coding/CPP practice/error.txt",
		"/G/Desktop Folders/Tech learn and project/coding/CPP practice/input.txt",
		"/G/Desktop Folders/Tech learn and project/coding/CPP practice/hello.cpp",
		"/C/Users/Abhishek Wisteli/AppData/Roaming/Sublime Text/Packages/User/hello.cpp"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"ptr2",
			"ptr1",
			"reverseLinkedList",
			"dp"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"folders":
	[
		{
			"path": "F:\\Tech learn and project\\coding\\CPP practice\\Blind 75"
		}
	],
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Blind 75/Linked_List/5.Remove_nth_from_end.cpp",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6737,
						"regions":
						{
						},
						"selection":
						[
							[
								5192,
								5651
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1906.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Blind 75/Linked_List/Revise_Linked_List.cpp",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 7556,
						"regions":
						{
						},
						"selection":
						[
							[
								5600,
								5924
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2249.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 2,
					"file": "Blind 75/Linked_List/input.txt",
					"selected": true,
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 3,
					"file": "Blind 75/Linked_List/output.txt",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 76,
						"regions":
						{
						},
						"selection":
						[
							[
								68,
								68
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 231.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Blind 75/Linked_List/error.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				2
			],
			[
				1,
				0,
				2,
				1
			],
			[
				1,
				1,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.608045418164,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/CPP.sublime-build",
	"project": "",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				2
			],
			[
				1,
				0,
				2,
				1
			],
			[
				1,
				1,
				2,
				2
			]
		]
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 247.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 2
	}
}
