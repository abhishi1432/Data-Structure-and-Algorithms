{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"te",
				"temp1"
			],
			[
				"lst",
				"list1"
			],
			[
				"list",
				"list1"
			],
			[
				"lis",
				"list1"
			],
			[
				"head",
				"head5"
			],
			[
				"reve",
				"reverseLinkedList_Iterative"
			],
			[
				"new",
				"new_head"
			],
			[
				"addn",
				"addNodeAtEnd"
			],
			[
				"longes",
				"longestCommonSubsequence_UsingRecursion"
			],
			[
				"INT",
				"INT_MIN"
			],
			[
				"IN",
				"INT_MIN"
			],
			[
				"call",
				"call_all_functions_here"
			],
			[
				"bina",
				"binarySearchh_lengthOfLIS_Helper"
			],
			[
				"mem",
				"memo"
			],
			[
				"su",
				"subAns"
			],
			[
				"toa",
				"total_ways_to_make_helper"
			],
			[
				"tot",
				"total_ways_to_make_helper"
			],
			[
				"min",
				"minimum_no_of_coins_to_make"
			],
			[
				"clim",
				"climbStairs_usingDP"
			],
			[
				"MA",
				"INT_MAX"
			],
			[
				"co",
				"coinChange2"
			],
			[
				"coinch",
				"coinChange"
			],
			[
				"minco",
				"mincoin"
			],
			[
				"coin",
				"coinChange"
			],
			[
				"ma",
				"maxSum"
			],
			[
				"for",
				"for_sum2"
			],
			[
				"ve",
				"vec"
			],
			[
				"bin",
				"bit_no"
			],
			[
				"max",
				"maxProd"
			],
			[
				"curr",
				"currMin"
			],
			[
				"cur",
				"currMin"
			],
			[
				"cum",
				"currMax"
			],
			[
				"Cou",
				"CountAndSay"
			],
			[
				"re",
				"reverseString"
			],
			[
				"c",
				"CPP_template()"
			],
			[
				"tra",
				"trappingWater_method4"
			],
			[
				"mx_",
				"mx_left"
			],
			[
				"find",
				"find3numbers_usingSorting_and_TwoPointer"
			],
			[
				"second",
				"second_sell"
			],
			[
				"firs",
				"first_buy"
			],
			[
				"bes",
				"best_time_maxprofit3_method3"
			],
			[
				"tem",
				"temp2"
			],
			[
				"print",
				"print_vec"
			],
			[
				"n",
				"n_pos"
			],
			[
				"trac",
				"track1"
			],
			[
				"ad",
				"addEdge"
			],
			[
				"Arr",
				"ArrayChallenge"
			],
			[
				"prin",
				"printEdgeList"
			],
			[
				"get",
				"getWeight"
			],
			[
				"des",
				"destVertexID"
			],
			[
				"set",
				"setStateName"
			],
			[
				"pus",
				"push_back"
			],
			[
				"state_",
				"state_id"
			],
			[
				"dest",
				"destVertexID"
			],
			[
				"extra",
				"extractMax"
			],
			[
				"extract",
				"extractMax"
			],
			[
				"Max",
				"MaxHeap"
			],
			[
				"He",
				"MinHeapify"
			],
			[
				"Min",
				"MinHeapify"
			],
			[
				"pr",
				"printArray"
			],
			[
				"heap",
				"MinHeapify"
			],
			[
				"inser",
				"insertKey"
			],
			[
				"dele",
				"deleteNode"
			],
			[
				"qu",
				"Queries"
			],
			[
				"sele",
				"selectivity"
			],
			[
				"prit",
				"print_vec"
			],
			[
				"inse",
				"insertKey"
			],
			[
				"temp",
				"tempNode"
			],
			[
				"t",
				"tempNode"
			],
			[
				"queu",
				"queue"
			],
			[
				"ne",
				"next"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Blind 75/Graph/Revise_Graph.cpp",
			"settings":
			{
				"buffer_size": 5124,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "C"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"insert_completion",
					{
						"completion": "/*\n\tA B H I S H E K    S I N G H\n*/\n\n#include<bits/stdc++.h>\nusing namespace std;\nusing namespace chrono;\n\n#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\n#define MOD 1000000007\n#define MOD1 998244353\n#define INF 1e18\n#define nline \"\\n\"\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\n#define ff first\n#define ss second\n#define PI 3.141592653589793238462\n#define set_bits __builtin_popcountll\n#define sz(x) ((int)(x).size())\n#define all(x) (x).begin(), (x).end()\n#define all_rev(x) (x).rbegin(), (x).rend()\n\n#ifndef ONLINE_JUDGE\n#define debug(x) cerr << #x <<\" \"; _print(x); cerr << endl;\n#else\n#define debug(x);\n#endif\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double lld;\n\n\n/*============================================================*/\n/*    debug() functions */\n\ntemplate <class T> void _print(T t) {cerr << t;}  \ntemplate <class T, class V> void _print(pair <T, V> p);\ntemplate <class T> void _print(vector <T> v);\ntemplate <class T> void _print(set <T> v);\ntemplate <class T, class V> void _print(map <T, V> v);\ntemplate <class T> void _print(multiset <T> v);\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\n\n/*==============================================================*/\n/*    Newly added templates */\n\ntemplate <class T> void print_vec(vector<T> v);  //printing any vector\ntemplate <class T> void print_set(set<T> s);  //printing set of any datatype\ntemplate <class T> void input_vec(vector<T> &v , int n);  //taking input of n elements of any data type into a vector\ntemplate <class T, class V, class X>V binarySearch(vector<T> a, V n, X item);  //binary search on vector\ntemplate <class T> void print_vec(vector<T> v){ for(T i:v){ cout<<i<<\" \";}cout<<nline;} \ntemplate <class T> void print_set(set<T> s){for(T i:s){cout<<i<<\" \";}cout<<nline;}  \ntemplate <class T> void input_vec(vector<T> &v , int n){for(int i=0;i<n;i++){int temp;cin>>temp;v.pb(temp);}}   \ntemplate <class T, class V, class X>V binarySearch(vector<T> a, V n, X item){  V low = 0; V high = n - 1; while(low<=high){{V mid = (low + high)/2; if (a[mid] == item) return mid; else if (a[mid] < item) low = mid + 1; else high = mid - 1;}} return -1;}\n\n/*===============================================================*/\n\n/*  Special puropose functions */\n\n// ll gcd(ll a, ll b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}\n// ll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}\n// void extendgcd(ll a, ll b, ll*v) {if (b == 0) {v[0] = 1; v[1] = 0; v[2] = a; return ;} extendgcd(b, a % b, v); ll x = v[1]; v[1] = v[0] - v[1] * (a / b); v[0] = x; return;} //pass an arry of size1 3\n// ll mminv(ll a, ll b) {ll arr[3]; extendgcd(a, b, arr); return arr[0];} //for non prime b\n// ll mminvprime(ll a, ll b) {return expo(a, b - 2, b);}\n// bool revsort(ll a, ll b) {return a > b;}\n// void swap(int &x, int &y) {int temp = x; x = y; y = temp;}\n// ll combination(ll n, ll r, ll m, ll *fact, ll *ifact) {ll val1 = fact[n]; ll val2 = ifact[n - r]; ll val3 = ifact[r]; return (((val1 * val2) % m) * val3) % m;}\n// void google(int t) {cout << \"Case #\" << t << \": \";}\n// vector<ll> sieve(int n) {int*arr = new int[n + 1](); vector<ll> vect; for (int i = 2; i <= n; i++)if (arr[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}\n// ll mod_add(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}\n// ll mod_mul(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}\n// ll mod_sub(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}\n// ll mod_div(ll a, ll b, ll m) {a = a % m; b = b % m; return (mod_mul(a, mminvprime(b, m), m) + m) % m;}  //only for prime m\n// ll phin(ll n) {ll number = n; if (n % 2 == 0) {number /= 2; while (n % 2 == 0) n /= 2;} for (ll i = 3; i <= sqrt(n); i += 2) {if (n % i == 0) {while (n % i == 0)n /= i; number = (number / i * (i - 1));}} if (n > 1)number = (number / n * (n - 1)) ; return number;} //O(sqrt(N))\n// ll lcm(int a, int b){return (a / gcd(a, b)) * b;}\n\n/*=================================================================*/\n\n\nvoid solve() {\n\t\n\n}\n\n\nint main() {\n\tfastio();\n#ifndef ONLINE_JUDGE\n\tfreopen(\"error.txt\", \"w\", stderr);\n#endif\n\tauto start1 = high_resolution_clock::now();\n\tsolve();\n\tauto stop1 = high_resolution_clock::now();\n\tauto duration = duration_cast<microseconds>(stop1 - start1);\n#ifndef ONLINE_JUDGE\n\tcerr << \"Time: \" << duration . count() / 1000 << endl;\n#endif\n\treturn 0;\n}",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "CPP_template()"
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAABAAAAQwAAAAAAAAAABBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "Blind 75/Linked_List/2.Detect_Cycle_In_LinkedList.cpp",
			"settings":
			{
				"buffer_size": 7086,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAADoYAAAAAAAAOxgAAAAAAAAAAAAAOxgAAAAAAAA8GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOhgAAAAAAAA6GAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"paste",
					null,
					"AQAAADwYAAAAAAAAghgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPBgAAAAAAAA8GAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"left_delete",
					null,
					"AQAAAH0YAAAAAAAAfRgAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAgRgAAAAAAACBGAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					4,
					"left_delete",
					null,
					"BAAAAFMYAAAAAAAAUxgAAAAAAAABAAAAdFIYAAAAAAAAUhgAAAAAAAABAAAAc1EYAAAAAAAAURgAAAAAAAABAAAAaVAYAAAAAAAAUBgAAAAAAAABAAAATA",
					"AQAAAAAAAAABAAAAVBgAAAAAAABUGAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					4,
					"left_delete",
					null,
					"BAAAAGAYAAAAAAAAYBgAAAAAAAABAAAAdF8YAAAAAAAAXxgAAAAAAAABAAAAc14YAAAAAAAAXhgAAAAAAAABAAAAaV0YAAAAAAAAXRgAAAAAAAABAAAATA",
					"AQAAAAAAAAABAAAAYRgAAAAAAABhGAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"left_delete",
					null,
					"AQAAAHAYAAAAAAAAcBgAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAdBgAAAAAAAB0GAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "Blind 75/Linked_List/3.Merge_Two_sorted_LinkedLists.cpp",
			"settings":
			{
				"buffer_size": 6333,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAArhsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "="
					},
					"AgAAAOYZAAAAAAAA5xkAAAAAAAAAAAAA5xkAAAAAAADnGQAAAAAAAFEAAAAgY291dDw8aGFzQ3ljbGUoaGVhZDMpPDxubGluZTsKICAgIGNvdXQ8PGhhc0N5Y2xlX2Zsb3lkX2N5Y2xlX0FsZ28oaGVhZDMpPDxubGluZTs",
					"AQAAAAAAAAABAAAANxoAAAAAAADmGQAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					3,
					"left_delete",
					null,
					"AwAAAOYZAAAAAAAA5hkAAAAAAAABAAAAPeMZAAAAAAAA4xkAAAAAAAADAAAAICAg4hkAAAAAAADiGQAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAA5xkAAAAAAADnGQAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					2,
					"left_delete",
					null,
					"AgAAAB0UAAAAAAAAHRQAAAAAAAAdBAAAYm9vbCBoYXNDeWNsZShOb2RlICpoZWFkKSB7CiAgICAvKgogICAgICAgIFVzaW5nIG1hcCBhbmQgc2V0IHRvIGNoZWNrIGZvciB0aGUgcmVwZWF0aW5nIGFkZHJlc3Mgb2YgYW55IG5vZGUuCiAgICAgICAgVGltZSBjb21wZWxleGl0eSBpcyBPKG4pCiAgICAgICAgU3BhY2UgY29tcGxlbHhpeXQgaXMgTyhuKQogICAgKi8KICAgIE5vZGUqIHRlbXAgPSBoZWFkOwogICAgdW5vcmRlcmVkX3NldDxOb2RlKj4gc3Q7CiAgICBtYXA8Tm9kZSogLCBpbnQ+IG1wOwogICAgd2hpbGUodGVtcCE9bnVsbHB0cil7CiAgICAgICAgLy8gaWYoc3QuZmluZCh0ZW1wKSE9c3QuZW5kKCkpCiAgICAgICAgLy8gICAgIHJldHVybiB0cnVlOwogICAgICAgIC8vIHN0Lmluc2VydCh0ZW1wKTsKICAgICAgICBpZihtcFt0ZW1wXT09MSkKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgbXBbdGVtcF09MTsKICAgICAgICB0ZW1wPSB0ZW1wLT5uZXh0OwoKICAgIH0gICAgICAgICAgIAogICAgcmV0dXJuIGZhbHNlOwp9CmJvb2wgaGFzQ3ljbGVfZmxveWRfY3ljbGVfQWxnbyhOb2RlICpoZWFkKSB7CiAgICAvKgogICAgICAgIFVzaW5nIHR3byBwb2ludGVyIGFwcHJvYWNoIC0gIG9uZSBpcyBzbG93IHBvaW50ZXIgYW5kIGFub3RoZXIgaXMgZmFzdCBwb2ludGVyLgogICAgICAgIFRpbWUgY29tcGVsZXhpdHkgaXMgTyhuKQogICAgICAgIFNwYWNlIGNvbXBsZWx4aXl0IGlzIE8oMSkKICAgICovCiAgICBpZihoZWFkID09IE5VTEwgfHwgaGVhZC0+bmV4dCA9PSBOVUxMKSAKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOyAgICAKICAgIE5vZGUgKnNsb3csICpmYXN0OwogICAgc2xvdyA9IGZhc3QgPSBoZWFkOwogICAgd2hpbGUoZmFzdCE9TlVMTCAmJiBmYXN0LT5uZXh0LT5uZXh0IT1OVUxMKXsKICAgICAgICBzbG93PSBzbG93LT5uZXh0OwogICAgICAgIGZhc3Q9IGZhc3QtPm5leHQtPm5leHQ7CiAgICAgICAgaWYoZmFzdCA9PSBzbG93KXsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSAKICAgIH0gICAgICAgICAgIAogICAgcmV0dXJuIGZhbHNlOwp9HBQAAAAAAAAcFAAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAOhgAAAAAAAAdFAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					3,
					"left_delete",
					null,
					"AwAAAJMVAAAAAAAAkxUAAAAAAAAUAAAAaGVhZDQtPm5leHQgPSBoZWFkMzuPFQAAAAAAAI8VAAAAAAAABAAAACAgICCOFQAAAAAAAI4VAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAApxUAAAAAAACTFQAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "\nNode"
					},
					"BgAAAHUVAAAAAAAAdhUAAAAAAAAAAAAAdhUAAAAAAAB6FQAAAAAAAAAAAAB6FQAAAAAAAHsVAAAAAAAAAAAAAHsVAAAAAAAAfBUAAAAAAAAAAAAAfBUAAAAAAAB9FQAAAAAAAAAAAAB9FQAAAAAAAH4VAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdRUAAAAAAAB1FQAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAH4VAAAAAAAAfxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfhUAAAAAAAB+FQAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " head"
					},
					"BQAAAH8VAAAAAAAAgBUAAAAAAAAAAAAAgBUAAAAAAACBFQAAAAAAAAAAAACBFQAAAAAAAIIVAAAAAAAAAAAAAIIVAAAAAAAAgxUAAAAAAAAAAAAAgxUAAAAAAACEFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfxUAAAAAAAB/FQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAIQVAAAAAAAAhRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhBUAAAAAAACEFQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"left_delete",
					null,
					"AQAAAIQVAAAAAAAAhBUAAAAAAAABAAAANA",
					"AQAAAAAAAAABAAAAhRUAAAAAAACFFQAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAIQVAAAAAAAAhRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhBUAAAAAAACEFQAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAIUVAAAAAAAAhhUAAAAAAAAAAAAAhhUAAAAAAACHFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhRUAAAAAAACFFQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIcVAAAAAAAAiBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhxUAAAAAAACHFQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					2,
					"left_delete",
					null,
					"AgAAAIcVAAAAAAAAhxUAAAAAAAABAAAAIIYVAAAAAAAAhhUAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAiBUAAAAAAACIFQAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAIYVAAAAAAAAhxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhhUAAAAAAACGFQAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " cre"
					},
					"BAAAAIcVAAAAAAAAiBUAAAAAAAAAAAAAiBUAAAAAAACJFQAAAAAAAAAAAACJFQAAAAAAAIoVAAAAAAAAAAAAAIoVAAAAAAAAixUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhxUAAAAAAACHFQAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert_completion",
					{
						"completion": "createNode",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "createNode"
					},
					"AgAAAIgVAAAAAAAAiBUAAAAAAAADAAAAY3JliBUAAAAAAACSFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAixUAAAAAAACLFQAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJIVAAAAAAAAlBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkhUAAAAAAACSFQAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAJMVAAAAAAAAlBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkxUAAAAAAACTFQAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJUVAAAAAAAAlhUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlRUAAAAAAACVFQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "\nhead"
					},
					"BgAAAK8VAAAAAAAAsBUAAAAAAAAAAAAAsBUAAAAAAAC0FQAAAAAAAAAAAAC0FQAAAAAAALUVAAAAAAAAAAAAALUVAAAAAAAAthUAAAAAAAAAAAAAthUAAAAAAAC3FQAAAAAAAAAAAAC3FQAAAAAAALgVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArxUAAAAAAACvFQAAAAAAAAAAAAAAgHBA"
				],
				[
					39,
					1,
					"insert_completion",
					{
						"completion": "head4",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "head4"
					},
					"AgAAALQVAAAAAAAAtBUAAAAAAAAEAAAAaGVhZLQVAAAAAAAAuRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuBUAAAAAAAC4FQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "->ne"
					},
					"BAAAALkVAAAAAAAAuhUAAAAAAAAAAAAAuhUAAAAAAAC7FQAAAAAAAAAAAAC7FQAAAAAAALwVAAAAAAAAAAAAALwVAAAAAAAAvRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuRUAAAAAAAC5FQAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert_completion",
					{
						"completion": "next",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "next"
					},
					"AgAAALsVAAAAAAAAuxUAAAAAAAACAAAAbmW7FQAAAAAAAL8VAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvRUAAAAAAAC9FQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAL8VAAAAAAAAwBUAAAAAAAAAAAAAwBUAAAAAAADBFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvxUAAAAAAAC/FQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " head"
					},
					"BQAAAMEVAAAAAAAAwhUAAAAAAAAAAAAAwhUAAAAAAADDFQAAAAAAAAAAAADDFQAAAAAAAMQVAAAAAAAAAAAAAMQVAAAAAAAAxRUAAAAAAAAAAAAAxRUAAAAAAADGFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwRUAAAAAAADBFQAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert_completion",
					{
						"completion": "head5",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "head5"
					},
					"AgAAAMIVAAAAAAAAwhUAAAAAAAAEAAAAaGVhZMIVAAAAAAAAxxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxhUAAAAAAADGFQAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMcVAAAAAAAAyBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxxUAAAAAAADHFQAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "\npri"
					},
					"BQAAAOUVAAAAAAAA5hUAAAAAAAAAAAAA5hUAAAAAAADqFQAAAAAAAAAAAADqFQAAAAAAAOsVAAAAAAAAAAAAAOsVAAAAAAAA7BUAAAAAAAAAAAAA7BUAAAAAAADtFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5RUAAAAAAADlFQAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert_completion",
					{
						"completion": "printLinkedList",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "printLinkedList"
					},
					"AgAAAOoVAAAAAAAA6hUAAAAAAAADAAAAcHJp6hUAAAAAAAD5FQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7RUAAAAAAADtFQAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPkVAAAAAAAA+xUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+RUAAAAAAAD5FQAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "&head3"
					},
					"BgAAAPoVAAAAAAAA+xUAAAAAAAAAAAAA+xUAAAAAAAD8FQAAAAAAAAAAAAD8FQAAAAAAAP0VAAAAAAAAAAAAAP0VAAAAAAAA/hUAAAAAAAAAAAAA/hUAAAAAAAD/FQAAAAAAAAAAAAD/FQAAAAAAAAAWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hUAAAAAAAD6FQAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAEWAAAAAAAAAhYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAARYAAAAAAAABFgAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAOoVAAAAAAAA7RUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAhYAAAAAAAD/FQAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAAUWAAAAAAAABhYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABRYAAAAAAAAFFgAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"left_delete",
					null,
					"AQAAAAUWAAAAAAAABRYAAAAAAAABAAAAPw",
					"AQAAAAAAAAABAAAABhYAAAAAAAAGFgAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAOoVAAAAAAAA6hUAAAAAAAADAAAALy8g",
					"AQAAAAAAAAABAAAABRYAAAAAAAAFFgAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "while"
					},
					"BQAAAFIUAAAAAAAAUxQAAAAAAAAAAAAAUxQAAAAAAABUFAAAAAAAAAAAAABUFAAAAAAAAFUUAAAAAAAAAAAAAFUUAAAAAAAAVhQAAAAAAAAAAAAAVhQAAAAAAABXFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUhQAAAAAAABSFAAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFcUAAAAAAAAWRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVxQAAAAAAABXFAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "list1_1"
					},
					"BwAAAFgUAAAAAAAAWRQAAAAAAAAAAAAAWRQAAAAAAABaFAAAAAAAAAAAAABaFAAAAAAAAFsUAAAAAAAAAAAAAFsUAAAAAAAAXBQAAAAAAAAAAAAAXBQAAAAAAABdFAAAAAAAAAAAAABdFAAAAAAAAF4UAAAAAAAAAAAAAF4UAAAAAAAAXxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWBQAAAAAAABYFAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					2,
					"left_delete",
					null,
					"AgAAAF4UAAAAAAAAXhQAAAAAAAABAAAAMV0UAAAAAAAAXRQAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAXxQAAAAAAABfFAAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "!=NULL"
					},
					"BgAAAF0UAAAAAAAAXhQAAAAAAAAAAAAAXhQAAAAAAABfFAAAAAAAAAAAAABfFAAAAAAAAGAUAAAAAAAAAAAAAGAUAAAAAAAAYRQAAAAAAAAAAAAAYRQAAAAAAABiFAAAAAAAAAAAAABiFAAAAAAAAGMUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXRQAAAAAAABdFAAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": " &&&"
					},
					"BAAAAGMUAAAAAAAAZBQAAAAAAAAAAAAAZBQAAAAAAABlFAAAAAAAAAAAAABlFAAAAAAAAGYUAAAAAAAAAAAAAGYUAAAAAAAAZxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYxQAAAAAAABjFAAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGcUAAAAAAAAaBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZxQAAAAAAABnFAAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					2,
					"left_delete",
					null,
					"AgAAAGcUAAAAAAAAZxQAAAAAAAABAAAAIGYUAAAAAAAAZhQAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAAaBQAAAAAAABoFAAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AgAAAGYUAAAAAAAAZxQAAAAAAAAAAAAAZxQAAAAAAABoFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZhQAAAAAAABmFAAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"left_delete",
					null,
					"AQAAAGcUAAAAAAAAZxQAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAaBQAAAAAAABoFAAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "k"
					},
					"AQAAAGcUAAAAAAAAaBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZxQAAAAAAABnFAAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"left_delete",
					null,
					"AQAAAGcUAAAAAAAAZxQAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAAaBQAAAAAAABoFAAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "list2"
					},
					"BQAAAGcUAAAAAAAAaBQAAAAAAAAAAAAAaBQAAAAAAABpFAAAAAAAAAAAAABpFAAAAAAAAGoUAAAAAAAAAAAAAGoUAAAAAAAAaxQAAAAAAAAAAAAAaxQAAAAAAABsFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZxQAAAAAAABnFAAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "!=NULL"
					},
					"BgAAAGwUAAAAAAAAbRQAAAAAAAAAAAAAbRQAAAAAAABuFAAAAAAAAAAAAABuFAAAAAAAAG8UAAAAAAAAAAAAAG8UAAAAAAAAcBQAAAAAAAAAAAAAcBQAAAAAAABxFAAAAAAAAAAAAABxFAAAAAAAAHIUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbBQAAAAAAABsFAAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAHMUAAAAAAAAdRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcxQAAAAAAABzFAAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAHQUAAAAAAAAdRQAAAAAAAAAAAAAdRQAAAAAAAB5FAAAAAAAAAAAAAB5FAAAAAAAAHoUAAAAAAAAAAAAAHoUAAAAAAAAfhQAAAAAAAAAAAAAdRQAAAAAAAB1FAAAAAAAAAQAAAAgICAgdRQAAAAAAAB9FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdBQAAAAAAAB0FAAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAH0UAAAAAAAAfhQAAAAAAAAAAAAAfhQAAAAAAAB/FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfRQAAAAAAAB9FAAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAH8UAAAAAAAAgRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfxQAAAAAAAB/FAAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "lest"
					},
					"BAAAAIAUAAAAAAAAgRQAAAAAAAAAAAAAgRQAAAAAAACCFAAAAAAAAAAAAACCFAAAAAAAAIMUAAAAAAAAAAAAAIMUAAAAAAAAhBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgBQAAAAAAACAFAAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					3,
					"left_delete",
					null,
					"AwAAAIMUAAAAAAAAgxQAAAAAAAABAAAAdIIUAAAAAAAAghQAAAAAAAABAAAAc4EUAAAAAAAAgRQAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAhBQAAAAAAACEFAAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "is"
					},
					"AgAAAIEUAAAAAAAAghQAAAAAAAAAAAAAghQAAAAAAACDFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgRQAAAAAAACBFAAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert_completion",
					{
						"completion": "list1",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "list1"
					},
					"AgAAAIAUAAAAAAAAgBQAAAAAAAADAAAAbGlzgBQAAAAAAACFFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgxQAAAAAAACDFAAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "->data"
					},
					"BgAAAIUUAAAAAAAAhhQAAAAAAAAAAAAAhhQAAAAAAACHFAAAAAAAAAAAAACHFAAAAAAAAIgUAAAAAAAAAAAAAIgUAAAAAAAAiRQAAAAAAAAAAAAAiRQAAAAAAACKFAAAAAAAAAAAAACKFAAAAAAAAIsUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhRQAAAAAAACFFAAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": " <"
					},
					"AgAAAIsUAAAAAAAAjBQAAAAAAAAAAAAAjBQAAAAAAACNFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAixQAAAAAAACLFAAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " list2"
					},
					"BgAAAI0UAAAAAAAAjhQAAAAAAAAAAAAAjhQAAAAAAACPFAAAAAAAAAAAAACPFAAAAAAAAJAUAAAAAAAAAAAAAJAUAAAAAAAAkRQAAAAAAAAAAAAAkRQAAAAAAACSFAAAAAAAAAAAAACSFAAAAAAAAJMUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjRQAAAAAAACNFAAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "<data"
					},
					"BQAAAJMUAAAAAAAAlBQAAAAAAAAAAAAAlBQAAAAAAACVFAAAAAAAAAAAAACVFAAAAAAAAJYUAAAAAAAAAAAAAJYUAAAAAAAAlxQAAAAAAAAAAAAAlxQAAAAAAACYFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkxQAAAAAAACTFAAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"left_delete",
					null,
					"AQAAAJMUAAAAAAAAkxQAAAAAAAABAAAAPA",
					"AQAAAAAAAAABAAAAlBQAAAAAAACUFAAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "->"
					},
					"AgAAAJMUAAAAAAAAlBQAAAAAAAAAAAAAlBQAAAAAAACVFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkxQAAAAAAACTFAAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"left_delete",
					null,
					"AQAAAIwUAAAAAAAAjBQAAAAAAAABAAAAPA",
					"AQAAAAAAAAABAAAAjRQAAAAAAACNFAAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAAIwUAAAAAAAAjRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjBQAAAAAAACMFAAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"left_delete",
					null,
					"AQAAAIQUAAAAAAAAhBQAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAhRQAAAAAAACFFAAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAIQUAAAAAAAAhRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhBQAAAAAAACEFAAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"left_delete",
					null,
					"AQAAAIsUAAAAAAAAixQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAjBQAAAAAAACMFAAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"left_delete",
					null,
					"AQAAAIsUAAAAAAAAixQAAAAAAAABAAAAPg",
					"AQAAAAAAAAABAAAAjBQAAAAAAACMFAAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": " <"
					},
					"AgAAAIsUAAAAAAAAjBQAAAAAAAAAAAAAjBQAAAAAAACNFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAixQAAAAAAACLFAAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"left_delete",
					null,
					"AQAAAJIUAAAAAAAAkhQAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAkxQAAAAAAACTFAAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAJIUAAAAAAAAkxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkhQAAAAAAACSFAAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "\nlist"
					},
					"CAAAAJoUAAAAAAAAmxQAAAAAAAAAAAAAmxQAAAAAAACjFAAAAAAAAAAAAACbFAAAAAAAAJsUAAAAAAAACAAAACAgICAgICAgmxQAAAAAAACnFAAAAAAAAAAAAACnFAAAAAAAAKgUAAAAAAAAAAAAAKgUAAAAAAAAqRQAAAAAAAAAAAAAqRQAAAAAAACqFAAAAAAAAAAAAACqFAAAAAAAAKsUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmhQAAAAAAACaFAAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					4,
					"left_delete",
					null,
					"BAAAAKoUAAAAAAAAqhQAAAAAAAABAAAAdKkUAAAAAAAAqRQAAAAAAAABAAAAc6gUAAAAAAAAqBQAAAAAAAABAAAAaacUAAAAAAAApxQAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAqxQAAAAAAACrFAAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "swa"
					},
					"AwAAAKcUAAAAAAAAqBQAAAAAAAAAAAAAqBQAAAAAAACpFAAAAAAAAAAAAACpFAAAAAAAAKoUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApxQAAAAAAACnFAAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert_completion",
					{
						"completion": "swap",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "swap"
					},
					"AgAAAKcUAAAAAAAApxQAAAAAAAADAAAAc3dhpxQAAAAAAACrFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqhQAAAAAAACqFAAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKsUAAAAAAAArRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqxQAAAAAAACrFAAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "list"
					},
					"BAAAAKwUAAAAAAAArRQAAAAAAAAAAAAArRQAAAAAAACuFAAAAAAAAAAAAACuFAAAAAAAAK8UAAAAAAAAAAAAAK8UAAAAAAAAsBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArBQAAAAAAACsFAAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"insert_completion",
					{
						"completion": "list1",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "list1"
					},
					"AgAAAKwUAAAAAAAArBQAAAAAAAAEAAAAbGlzdKwUAAAAAAAAsRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsBQAAAAAAACwFAAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "->data"
					},
					"BgAAALEUAAAAAAAAshQAAAAAAAAAAAAAshQAAAAAAACzFAAAAAAAAAAAAACzFAAAAAAAALQUAAAAAAAAAAAAALQUAAAAAAAAtRQAAAAAAAAAAAAAtRQAAAAAAAC2FAAAAAAAAAAAAAC2FAAAAAAAALcUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsRQAAAAAAACxFAAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": " ,"
					},
					"AgAAALcUAAAAAAAAuBQAAAAAAAAAAAAAuBQAAAAAAAC5FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtxQAAAAAAAC3FAAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": " lis"
					},
					"BAAAALkUAAAAAAAAuhQAAAAAAAAAAAAAuhQAAAAAAAC7FAAAAAAAAAAAAAC7FAAAAAAAALwUAAAAAAAAAAAAALwUAAAAAAAAvRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuRQAAAAAAAC5FAAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"insert_completion",
					{
						"completion": "list2",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "list2"
					},
					"AgAAALoUAAAAAAAAuhQAAAAAAAADAAAAbGlzuhQAAAAAAAC/FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvRQAAAAAAAC9FAAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "->s"
					},
					"AwAAAL8UAAAAAAAAwBQAAAAAAAAAAAAAwBQAAAAAAADBFAAAAAAAAAAAAADBFAAAAAAAAMIUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvxQAAAAAAAC/FAAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"left_delete",
					null,
					"AQAAAMEUAAAAAAAAwRQAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAwhQAAAAAAADCFAAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "data"
					},
					"BAAAAMEUAAAAAAAAwhQAAAAAAAAAAAAAwhQAAAAAAADDFAAAAAAAAAAAAADDFAAAAAAAAMQUAAAAAAAAAAAAAMQUAAAAAAAAxRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwRQAAAAAAADBFAAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMYUAAAAAAAAxxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxhQAAAAAAADGFAAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAMcUAAAAAAAAyBQAAAAAAAAAAAAAyBQAAAAAAADUFAAAAAAAAAAAAADIFAAAAAAAAMgUAAAAAAAADAAAACAgICAgICAgICAgIMgUAAAAAAAA0BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxxQAAAAAAADHFAAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"wrap_block",
					{
						"begin": "{",
						"end": "}"
					},
					"AwAAAJoUAAAAAAAAmxQAAAAAAAAAAAAAyRQAAAAAAADJFAAAAAAAAAgAAAAgICAgICAgIMkUAAAAAAAA0xQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmhQAAAAAAACaFAAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "\nlis"
					},
					"BQAAAMgUAAAAAAAAyRQAAAAAAAAAAAAAyRQAAAAAAADVFAAAAAAAAAAAAADVFAAAAAAAANYUAAAAAAAAAAAAANYUAAAAAAAA1xQAAAAAAAAAAAAA1xQAAAAAAADYFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyBQAAAAAAADIFAAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAANgUAAAAAAAA2RQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2BQAAAAAAADYFAAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "->lst"
					},
					"BQAAANkUAAAAAAAA2hQAAAAAAAAAAAAA2hQAAAAAAADbFAAAAAAAAAAAAADbFAAAAAAAANwUAAAAAAAAAAAAANwUAAAAAAAA3RQAAAAAAAAAAAAA3RQAAAAAAADeFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2RQAAAAAAADZFAAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"insert_completion",
					{
						"completion": "list1",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "list1"
					},
					"AgAAANsUAAAAAAAA2xQAAAAAAAADAAAAbHN02xQAAAAAAADgFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3hQAAAAAAADeFAAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					2,
					"left_delete",
					null,
					"AgAAANoUAAAAAAAA2hQAAAAAAAABAAAAPtkUAAAAAAAA2RQAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAA2xQAAAAAAADbFAAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANkUAAAAAAAA2hQAAAAAAAAAAAAA2hQAAAAAAADbFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2RQAAAAAAADZFAAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANsUAAAAAAAA3BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2xQAAAAAAADbFAAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "->ne"
					},
					"BAAAAOEUAAAAAAAA4hQAAAAAAAAAAAAA4hQAAAAAAADjFAAAAAAAAAAAAADjFAAAAAAAAOQUAAAAAAAAAAAAAOQUAAAAAAAA5RQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4RQAAAAAAADhFAAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert_completion",
					{
						"completion": "next",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "next"
					},
					"AgAAAOMUAAAAAAAA4xQAAAAAAAACAAAAbmXjFAAAAAAAAOcUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5RQAAAAAAADlFAAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOcUAAAAAAAA6BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5xQAAAAAAADnFAAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPIUAAAAAAAA8xQAAAAAAAAAAAAA8xQAAAAAAAD7FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8hQAAAAAAADyFAAAAAAAAAAAAAAAAHBA"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": "\nNode*"
					},
					"CAAAAE0UAAAAAAAAThQAAAAAAAAAAAAAThQAAAAAAABSFAAAAAAAAAAAAAD4FAAAAAAAAPgUAAAAAAAACAAAACAgICAgICAgUhQAAAAAAABTFAAAAAAAAAAAAABTFAAAAAAAAFQUAAAAAAAAAAAAAFQUAAAAAAAAVRQAAAAAAAAAAAAAVRQAAAAAAABWFAAAAAAAAAAAAABWFAAAAAAAAFcUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATRQAAAAAAABNFAAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": " temp"
					},
					"BQAAAFcUAAAAAAAAWBQAAAAAAAAAAAAAWBQAAAAAAABZFAAAAAAAAAAAAABZFAAAAAAAAFoUAAAAAAAAAAAAAFoUAAAAAAAAWxQAAAAAAAAAAAAAWxQAAAAAAABcFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVxQAAAAAAABXFAAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAFwUAAAAAAAAXRQAAAAAAAAAAAAAXRQAAAAAAABeFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXBQAAAAAAABcFAAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": " lis"
					},
					"BAAAAF4UAAAAAAAAXxQAAAAAAAAAAAAAXxQAAAAAAABgFAAAAAAAAAAAAABgFAAAAAAAAGEUAAAAAAAAAAAAAGEUAAAAAAAAYhQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXhQAAAAAAABeFAAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"insert_completion",
					{
						"completion": "list1",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "list1"
					},
					"AgAAAF8UAAAAAAAAXxQAAAAAAAADAAAAbGlzXxQAAAAAAABkFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYhQAAAAAAABiFAAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"left_delete",
					null,
					"AQAAAGMUAAAAAAAAYxQAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAZBQAAAAAAABkFAAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": "2;"
					},
					"AgAAAGMUAAAAAAAAZBQAAAAAAAAAAAAAZBQAAAAAAABlFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYxQAAAAAAABjFAAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"reindent",
					null,
					"AQAAAAsVAAAAAAAAExUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACxUAAAAAAAALFQAAAAAAAAAAAAAAwGdA"
				],
				[
					174,
					1,
					"left_delete",
					null,
					"AQAAAA8VAAAAAAAADxUAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAExUAAAAAAAATFQAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": "list1="
					},
					"BgAAAA8VAAAAAAAAEBUAAAAAAAAAAAAAEBUAAAAAAAARFQAAAAAAAAAAAAARFQAAAAAAABIVAAAAAAAAAAAAABIVAAAAAAAAExUAAAAAAAAAAAAAExUAAAAAAAAUFQAAAAAAAAAAAAAUFQAAAAAAABUVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADxUAAAAAAAAPFQAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": " l"
					},
					"AgAAABUVAAAAAAAAFhUAAAAAAAAAAAAAFhUAAAAAAAAXFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFRUAAAAAAAAVFQAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"left_delete",
					null,
					"AQAAABYVAAAAAAAAFhUAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAFxUAAAAAAAAXFQAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": "list2;"
					},
					"BgAAABYVAAAAAAAAFxUAAAAAAAAAAAAAFxUAAAAAAAAYFQAAAAAAAAAAAAAYFQAAAAAAABkVAAAAAAAAAAAAABkVAAAAAAAAGhUAAAAAAAAAAAAAGhUAAAAAAAAbFQAAAAAAAAAAAAAbFQAAAAAAABwVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFhUAAAAAAAAWFQAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAPEUAAAAAAAA8hQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8RQAAAAAAADxFAAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": "\nmer"
					},
					"BQAAANQWAAAAAAAA1RYAAAAAAAAAAAAA1RYAAAAAAADZFgAAAAAAAAAAAADZFgAAAAAAANoWAAAAAAAAAAAAANoWAAAAAAAA2xYAAAAAAAAAAAAA2xYAAAAAAADcFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1BYAAAAAAADUFgAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"insert_completion",
					{
						"completion": "mergeTwoLists",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "mergeTwoLists"
					},
					"AgAAANkWAAAAAAAA2RYAAAAAAAADAAAAbWVy2RYAAAAAAADmFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3BYAAAAAAADcFgAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOYWAAAAAAAA6BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5hYAAAAAAADmFgAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": "&had"
					},
					"BAAAAOcWAAAAAAAA6BYAAAAAAAAAAAAA6BYAAAAAAADpFgAAAAAAAAAAAADpFgAAAAAAAOoWAAAAAAAAAAAAAOoWAAAAAAAA6xYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5xYAAAAAAADnFgAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"left_delete",
					null,
					"AQAAAOoWAAAAAAAA6hYAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAA6xYAAAAAAADrFgAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": "ea"
					},
					"AgAAAOoWAAAAAAAA6xYAAAAAAAAAAAAA6xYAAAAAAADsFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6hYAAAAAAADqFgAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					2,
					"left_delete",
					null,
					"AgAAAOsWAAAAAAAA6xYAAAAAAAABAAAAYeoWAAAAAAAA6hYAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAA7BYAAAAAAADsFgAAAAAAAAAAAAAAAPC/"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": "ad2"
					},
					"AwAAAOoWAAAAAAAA6xYAAAAAAAAAAAAA6xYAAAAAAADsFgAAAAAAAAAAAADsFgAAAAAAAO0WAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6hYAAAAAAADqFgAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					4,
					"left_delete",
					null,
					"BAAAAOwWAAAAAAAA7BYAAAAAAAABAAAAMusWAAAAAAAA6xYAAAAAAAABAAAAZOoWAAAAAAAA6hYAAAAAAAABAAAAYekWAAAAAAAA6RYAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAA7RYAAAAAAADtFgAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": "ead2,"
					},
					"BQAAAOkWAAAAAAAA6hYAAAAAAAAAAAAA6hYAAAAAAADrFgAAAAAAAAAAAADrFgAAAAAAAOwWAAAAAAAAAAAAAOwWAAAAAAAA7RYAAAAAAAAAAAAA7RYAAAAAAADuFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6RYAAAAAAADpFgAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "&head3"
					},
					"BgAAAO4WAAAAAAAA7xYAAAAAAAAAAAAA7xYAAAAAAADwFgAAAAAAAAAAAADwFgAAAAAAAPEWAAAAAAAAAAAAAPEWAAAAAAAA8hYAAAAAAAAAAAAA8hYAAAAAAADzFgAAAAAAAAAAAADzFgAAAAAAAPQWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7hYAAAAAAADuFgAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPUWAAAAAAAA9hYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9RYAAAAAAAD1FgAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "Node*"
					},
					"BQAAANkWAAAAAAAA2hYAAAAAAAAAAAAA2hYAAAAAAADbFgAAAAAAAAAAAADbFgAAAAAAANwWAAAAAAAAAAAAANwWAAAAAAAA3RYAAAAAAAAAAAAA3RYAAAAAAADeFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2RYAAAAAAADZFgAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"insert",
					{
						"characters": " new_lis"
					},
					"CAAAAN4WAAAAAAAA3xYAAAAAAAAAAAAA3xYAAAAAAADgFgAAAAAAAAAAAADgFgAAAAAAAOEWAAAAAAAAAAAAAOEWAAAAAAAA4hYAAAAAAAAAAAAA4hYAAAAAAADjFgAAAAAAAAAAAADjFgAAAAAAAOQWAAAAAAAAAAAAAOQWAAAAAAAA5RYAAAAAAAAAAAAA5RYAAAAAAADmFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3hYAAAAAAADeFgAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAOYWAAAAAAAA5xYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5hYAAAAAAADmFgAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAOcWAAAAAAAA6BYAAAAAAAAAAAAA6BYAAAAAAADpFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5xYAAAAAAADnFgAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOkWAAAAAAAA6hYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6RYAAAAAAADpFgAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAgXAAAAAAAACRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACBcAAAAAAAAIFwAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"reindent",
					null,
					"AQAAAAgXAAAAAAAADBcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACBcAAAAAAAAIFwAAAAAAAAAAAAAAAAAA"
				],
				[
					209,
					1,
					"insert",
					{
						"characters": "pri"
					},
					"AwAAAAwXAAAAAAAADRcAAAAAAAAAAAAADRcAAAAAAAAOFwAAAAAAAAAAAAAOFwAAAAAAAA8XAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADBcAAAAAAAAMFwAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"insert_completion",
					{
						"completion": "printLinkedList",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "printLinkedList"
					},
					"AgAAAAwXAAAAAAAADBcAAAAAAAADAAAAcHJpDBcAAAAAAAAbFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADxcAAAAAAAAPFwAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABsXAAAAAAAAHRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGxcAAAAAAAAbFwAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": "&nw"
					},
					"AwAAABwXAAAAAAAAHRcAAAAAAAAAAAAAHRcAAAAAAAAeFwAAAAAAAAAAAAAeFwAAAAAAAB8XAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHBcAAAAAAAAcFwAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"insert_completion",
					{
						"completion": "new_list",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "new_list"
					},
					"AgAAAB0XAAAAAAAAHRcAAAAAAAACAAAAbncdFwAAAAAAACUXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHxcAAAAAAAAfFwAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACYXAAAAAAAAJxcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJhcAAAAAAAAmFwAAAAAAAAAAAAAAAPC/"
				],
				[
					219,
					1,
					"left_delete",
					null,
					"AQAAAPgWAAAAAAAA+BYAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAA+RYAAAAAAAD5FgAAAAAAAAAAAAAAAPC/"
				],
				[
					221,
					1,
					"left_delete",
					null,
					"AQAAAP4WAAAAAAAA/hYAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAA/xYAAAAAAAD/FgAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					1,
					"reindent",
					null,
					"AQAAAB4VAAAAAAAAIhUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHhUAAAAAAAAeFQAAAAAAAAAAAAAAAPC/"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAACIVAAAAAAAAIxUAAAAAAAAAAAAAIxUAAAAAAAAkFQAAAAAAAAAAAAAkFQAAAAAAACUVAAAAAAAAAAAAACUVAAAAAAAAJhUAAAAAAAAAAAAAJhUAAAAAAAAnFQAAAAAAAAAAAAAnFQAAAAAAACgVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIhUAAAAAAAAiFQAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACgVAAAAAAAAKRUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKBUAAAAAAAAoFQAAAAAAAAAAAAAAAPC/"
				],
				[
					229,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAFwUAAAAAAAAXRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXBQAAAAAAABcFAAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGUUAAAAAAAAZhQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZRQAAAAAAABlFAAAAAAAAAAAAAAAAPC/"
				],
				[
					233,
					1,
					"insert",
					{
						"characters": "*temp2"
					},
					"BgAAAGYUAAAAAAAAZxQAAAAAAAAAAAAAZxQAAAAAAABoFAAAAAAAAAAAAABoFAAAAAAAAGkUAAAAAAAAAAAAAGkUAAAAAAAAahQAAAAAAAAAAAAAahQAAAAAAABrFAAAAAAAAAAAAABrFAAAAAAAAGwUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZhQAAAAAAABmFAAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGwUAAAAAAAAbRQAAAAAAAAAAAAAbRQAAAAAAABuFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbBQAAAAAAABsFAAAAAAAAAAAAAAAAPC/"
				],
				[
					235,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAAG4UAAAAAAAAbxQAAAAAAAAAAAAAbxQAAAAAAABwFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbhQAAAAAAABuFAAAAAAAAAAAAAAAAPC/"
				],
				[
					236,
					1,
					"left_delete",
					null,
					"AQAAAG8UAAAAAAAAbxQAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAcBQAAAAAAABwFAAAAAAAAAAAAAAAAPC/"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": "lls"
					},
					"AwAAAG8UAAAAAAAAcBQAAAAAAAAAAAAAcBQAAAAAAABxFAAAAAAAAAAAAABxFAAAAAAAAHIUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbxQAAAAAAABvFAAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					2,
					"left_delete",
					null,
					"AgAAAHEUAAAAAAAAcRQAAAAAAAABAAAAc3AUAAAAAAAAcBQAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAchQAAAAAAAByFAAAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					1,
					"insert",
					{
						"characters": "is"
					},
					"AgAAAHAUAAAAAAAAcRQAAAAAAAAAAAAAcRQAAAAAAAByFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcBQAAAAAAABwFAAAAAAAAAAAAAAAAPC/"
				],
				[
					240,
					1,
					"insert_completion",
					{
						"completion": "list1",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "list1"
					},
					"AgAAAG8UAAAAAAAAbxQAAAAAAAADAAAAbGlzbxQAAAAAAAB0FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAchQAAAAAAAByFAAAAAAAAAAAAAAAAPC/"
				],
				[
					243,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADkVAAAAAAAAOhUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAORUAAAAAAAA5FQAAAAAAAAAAAAAAAPC/"
				],
				[
					244,
					1,
					"left_delete",
					null,
					"AQAAADkVAAAAAAAAORUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAOhUAAAAAAAA6FQAAAAAAAAAAAAAAAPC/"
				],
				[
					245,
					1,
					"insert",
					{
						"characters": "tem"
					},
					"AwAAADkVAAAAAAAAOhUAAAAAAAAAAAAAOhUAAAAAAAA7FQAAAAAAAAAAAAA7FQAAAAAAADwVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAORUAAAAAAAA5FQAAAAAAAAAAAAAAAPC/"
				],
				[
					246,
					1,
					"insert_completion",
					{
						"completion": "temp2",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "temp2"
					},
					"AgAAADkVAAAAAAAAORUAAAAAAAADAAAAdGVtORUAAAAAAAA+FQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPBUAAAAAAAA8FQAAAAAAAAAAAAAAAPC/"
				],
				[
					247,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAD4VAAAAAAAAPxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPhUAAAAAAAA+FQAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					4,
					"left_delete",
					null,
					"BAAAACsVAAAAAAAAKxUAAAAAAAABAAAAMioVAAAAAAAAKhUAAAAAAAABAAAAdCkVAAAAAAAAKRUAAAAAAAABAAAAcygVAAAAAAAAKBUAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAALBUAAAAAAAAsFQAAAAAAAAAAAAAAAPC/"
				],
				[
					251,
					1,
					"left_delete",
					null,
					"AQAAACcVAAAAAAAAJxUAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAAKBUAAAAAAAAoFQAAAAAAAAAAAAAAAPC/"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": "te"
					},
					"AgAAACcVAAAAAAAAKBUAAAAAAAAAAAAAKBUAAAAAAAApFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJxUAAAAAAAAnFQAAAAAAAAAAAAAAAPC/"
				],
				[
					255,
					1,
					"insert_completion",
					{
						"completion": "temp1",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "temp1"
					},
					"AgAAACcVAAAAAAAAJxUAAAAAAAACAAAAdGUnFQAAAAAAACwVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKRUAAAAAAAApFQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "Blind 75/Linked_List/input.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Blind 75/Linked_List/output.txt",
			"settings":
			{
				"buffer_size": 58,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQoAAAAAAAAAACYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQoAAAAAAAAAACYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAmAAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQoAAAAAAAAAADoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA6AAAAUHJpbnRpbmcuLi4KMAoxCjIKMwpQcmludGluZy4uLgoxCjIKNQpQcmludGluZy4uLgowCjEKMgozCgAAAAAAAAAAOgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "Blind 75/Linked_List/error.txt",
			"settings":
			{
				"buffer_size": 8,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAVGltZTogMAoAAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"reinden",
				"Indentation: Reindent Lines"
			],
			[
				"red",
				"Indentation: Reindent Lines"
			],
			[
				"inde",
				"Indentation: Reindent Lines"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/F/Tech learn and project/coding/CPP practice/Blind 75",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Linked_List"
	],
	"file_history":
	[
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Graph/input.txt",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Graph/error.txt",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Graph/output.txt",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Linked_List/2.Detect_Cycle_In_LinkedList.cpp",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Linked_List/input.txt",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Linked_List/error.txt",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Linked_List/output.txt",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Linked_List/1.Reverse_a_Linked_list.cpp",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/Linked_List/Revise_Linked_List.cpp",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/DP/error.txt",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/DP/output.txt",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/DP/input.txt",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/DP/4.Longest_Common_Subsequence.cpp",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/DP/3.Longest_Increasing_Subsequence.cpp",
		"/F/Tech learn and project/coding/CPP practice/Blind 75/DP/2.Coin_Change.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/DP/error.txt",
		"/F/Tech learn and project/coding/CPP practice/leetcode/DP/2.Coin_Change.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/DP/input.txt",
		"/F/Tech learn and project/coding/CPP practice/leetcode/DP/output.txt",
		"/F/Tech learn and project/coding/CPP practice/leetcode/DP/1.Climbing_Stairs.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/output.txt",
		"/F/Tech learn and project/coding/CPP practice/leetcode/input.txt",
		"/F/Tech learn and project/coding/CPP practice/leetcode/error.txt",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Climbing_Stairs.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Contains_Duplicate.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Container_With_Most_Water.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Three_Sum.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/DailyChallange_CoinChange.cpp",
		"/E/json",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Missing_Number.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Counting_Bits.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Kira_amazon.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Reverse_Bits.cpp",
		"/C/Users/Abhishek Wisteli/Desktop/backupProcessingPipeline.js",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Number_Of_1_Bits.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Sum_Of_Two_Integers.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Search_In_Rotated_Sorted_Array.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Minimum_In_Rotated_Sorted_Array.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Product_Of_Array_Except_Self.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Maximum_Subarray.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Maximum_Product_Subarray.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Maximum_Product_Of_Three_Numbers.cpp",
		"/C/Users/Abhishek Wisteli/AppData/Roaming/Sublime Text/Packages/User/CPP_template.sublime-snippet",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Two_Sum.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Best_Time_To_Buy_And_Sell_Stock.cpp",
		"/F/Tech learn and project/coding/CPP practice/leetcode/Two Sum.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/String_ques7.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/DP_Ques1.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques10.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques11.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/String_ques2.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/String_ques1.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/String_ques3.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/String_ques5.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques36.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_Ques35.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/error.txt",
		"/F/Tech learn and project/coding/CPP practice/love babbar/output.txt",
		"/F/Tech learn and project/coding/CPP practice/love babbar/input.txt",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques34.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques30.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques33.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques32.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques31.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques29.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques19.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques28.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques26.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques18.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques25.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/fileInput (1).txt.crdownload",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques9.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques24.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques23.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques22.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques21.cpp",
		"/F/Tech learn and project/coding/CPP practice/love babbar/Array_ques20.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/LinkedList.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/friend_class.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/Codevita2022_ques1.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/Codevita2022_ques2.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/Codevita2022_ques4.py",
		"/F/Tech learn and project/coding/CPP practice/learn DS/graph_adjacencyList_cycleCheck_Directed.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/graph_adjacencyList_cycleCheck_Undirected.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/segmentTree_range_Query.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/deepti.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/shubham_chocolate.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/graph_adjacencyList_SimpleUsingArrayOfVector_gfg.cpp",
		"/C/Users/Abhishek Wisteli/Desktop/Screenshot 2022-02-04 100917.png",
		"/F/Tech learn and project/coding/CPP practice/learn DS/graph_adjacencyList_ComplexUsingYoutube.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/prakhar.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/output.txt",
		"/F/Tech learn and project/coding/CPP practice/learn DS/bianryheap.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/Stack.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/Queue.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/Binarytree.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/BinaryTreeViaArray.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/BinarySearchTree.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/temp.cpp",
		"/F/Tech learn and project/coding/CPP practice/learn DS/anupamq2.cpp",
		"/G/Desktop Folders/Tech learn and project/coding/CPP practice/output.txt",
		"/G/Desktop Folders/Tech learn and project/coding/CPP practice/error.txt",
		"/G/Desktop Folders/Tech learn and project/coding/CPP practice/input.txt",
		"/G/Desktop Folders/Tech learn and project/coding/CPP practice/hello.cpp",
		"/C/Users/Abhishek Wisteli/AppData/Roaming/Sublime Text/Packages/User/hello.cpp"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"reverseLinkedList",
			"dp"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"folders":
	[
		{
			"path": "F:\\Tech learn and project\\coding\\CPP practice\\Blind 75"
		}
	],
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Blind 75/Graph/Revise_Graph.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5124,
						"regions":
						{
						},
						"selection":
						[
							[
								347,
								347
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Blind 75/Linked_List/2.Detect_Cycle_In_LinkedList.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7086,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								7086
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2275.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Blind 75/Linked_List/3.Merge_Two_sorted_LinkedLists.cpp",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6333,
						"regions":
						{
						},
						"selection":
						[
							[
								5420,
								5420
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1773.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 3,
					"file": "Blind 75/Linked_List/input.txt",
					"selected": true,
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 4,
					"file": "Blind 75/Linked_List/output.txt",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 58,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 43.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Blind 75/Linked_List/error.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				2
			],
			[
				1,
				0,
				2,
				1
			],
			[
				1,
				1,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.628599484294,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/CPP.sublime-build",
	"project": "",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				2
			],
			[
				1,
				0,
				2,
				1
			],
			[
				1,
				1,
				2,
				2
			]
		]
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 247.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 2
	}
}
